// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AIP.GUI.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Speciman : SpecimanBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n");
            this.Write("  \r\n");
            this.Write("<!DOCTYPE e:eAIP PUBLIC \"-//EUROCONTROL//eAIP DTD 2.0//EN\" \"../../../eAIP-pack/dt" +
                    "d/eAIP.dtd\" [\r\n");
            
            #line 9 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections) { 
            
            #line default
            #line hidden
            this.Write("<!ENTITY eAIP-");
            
            #line 10 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write(" SYSTEM \"");
            
            #line 10 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Country)));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 10 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 10 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Lang)));
            
            #line default
            #line hidden
            this.Write(".xml\">\r\n");
            
            #line 11 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            
            #line 12 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string air in Data.AirportList) { 
            
            #line default
            #line hidden
            this.Write("<!ENTITY eAIP-AD-");
            
            #line 13 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(air)));
            
            #line default
            #line hidden
            this.Write(" SYSTEM \"");
            
            #line 13 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Country)));
            
            #line default
            #line hidden
            this.Write("-AD-");
            
            #line 13 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(air)));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 13 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Lang)));
            
            #line default
            #line hidden
            this.Write(".xml\">\r\n");
            
            #line 14 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            
            #line 15 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string hel in Data.HeliportList) { 
            
            #line default
            #line hidden
            this.Write("<!ENTITY eAIP-AD-");
            
            #line 16 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(hel)));
            
            #line default
            #line hidden
            this.Write(" SYSTEM \"");
            
            #line 16 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Country)));
            
            #line default
            #line hidden
            this.Write("-AD-");
            
            #line 16 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(hel)));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 16 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Lang)));
            
            #line default
            #line hidden
            this.Write(".xml\">\r\n");
            
            #line 17 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write("]>\r\n<?xml-stylesheet href=\"../xslt/html-content.xslt\" type=\"text/xsl\"?>\r\n<?eAIP-l" +
                    "ocales ../locales.xml?>\r\n<e:eAIP Edition=\"");
            
            #line 21 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Edition)));
            
            #line default
            #line hidden
            this.Write("\" Effective-date=\"");
            
            #line 21 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.EffectiveDate)));
            
            #line default
            #line hidden
            this.Write("\"\r\n\tICAO-country-code=\"");
            
            #line 22 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Country)));
            
            #line default
            #line hidden
            this.Write("\" Publication-date=\"");
            
            #line 22 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.PublicationDate)));
            
            #line default
            #line hidden
            this.Write("\" Publishing-organisation=\"");
            
            #line 22 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Company)));
            
            #line default
            #line hidden
            this.Write("\" State=\"");
            
            #line 22 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Company)));
            
            #line default
            #line hidden
            this.Write("\" Toc=\"No\"\r\n\tVersion=\"2.0\" id=\"eAIP\" xml:lang=\"");
            
            #line 23 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(Data.Lang)));
            
            #line default
            #line hidden
            this.Write("\" xmlns:e=\"http://www.eurocontrol.int/xmlns/AIM/eAIP\">\r\n\t<e:GEN Number=\"Part 1\" T" +
                    "oc=\"No\" id=\"GEN\">\r\n\t\t<e:Title Updated=\"No\">GENERAL (GEN)</e:Title>\r\n\t\t<e:GEN-0 N" +
                    "umber=\"GEN 0\" Toc=\"No\" id=\"GEN-0\">\r\n\t\t\t<e:Title Updated=\"No\"/> \r\n\t\t\t");
            
            #line 28 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("GEN-0"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 28 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 28 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t</e:GEN-0>\r\n\t\t<e:GEN-1 Number=\"GEN 1\" Toc=\"Yes\" id=\"GEN-1\">\r\n\t\t\t<e:Title Update" +
                    "d=\"No\">NATIONAL REGULATIONS AND REQUIREMENTS</e:Title>");
            
            #line 31 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("GEN-1"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 31 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 31 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:GEN-1>\r\n\t\t<e:GEN-2 Number=\"GEN 2\" Toc=\"Yes\" id=\"GEN-2\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">TABLES AND CODES</e:Title> ");
            
            #line 33 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("GEN-2"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 33 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 33 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:GEN-2>\r\n\t\t<e:GEN-3 Number=\"GEN 3\" Toc=\"Yes\" id=\"GEN-3\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">SERVICES</e:Title> ");
            
            #line 35 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("GEN-3"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 35 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 35 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:GEN-3>\r\n\t\t<e:GEN-4 Number=\"GEN 4\" Toc=\"Yes\" id=\"GEN-4\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">CHARGES FOR AERODROMES/HELIPORTS AND AIR NAVIGATION SERVICES</e:Title> ");
            
            #line 37 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("GEN-4"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 37 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 37 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:GEN-4>\r\n\t</e:GEN>\r\n\t<e:ENR Number=\"Part 2\" Toc=\"No\" id=\"ENR\">\r\n\t\t<e:Title Up" +
                    "dated=\"No\">EN-ROUTE (ENR)</e:Title>\r\n\t\t<e:ENR-0 Number=\"ENR 0\" Toc=\"No\" id=\"ENR-" +
                    "0\">\r\n\t\t\t<e:Title Updated=\"No\"> </e:Title> ");
            
            #line 42 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("ENR-0"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 42 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 42 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:ENR-0>\r\n\t\t<e:ENR-1 Number=\"ENR 1\" Toc=\"Yes\" id=\"ENR-1\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">GENERAL RULES AND PROCEDURES</e:Title> ");
            
            #line 44 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("ENR-1"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 44 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 44 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:ENR-1>\r\n\t\t<e:ENR-2 Number=\"ENR 2\" Toc=\"Yes\" id=\"ENR-2\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">AIR TRAFFIC SERVICES AIRSPACE</e:Title> ");
            
            #line 46 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("ENR-2"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 46 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 46 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:ENR-2>\r\n\t\t<e:ENR-3 Number=\"ENR 3\" Toc=\"Yes\" id=\"ENR-3\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">ATS ROUTES</e:Title> ");
            
            #line 48 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("ENR-3"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 48 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 48 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:ENR-3>\r\n\t\t<e:ENR-4 Number=\"ENR 4\" Toc=\"Yes\" id=\"ENR-4\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">RADIO NAVIGATION AIDS/SYSTEMS</e:Title> ");
            
            #line 50 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("ENR-4"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 50 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 50 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:ENR-4>\r\n\t\t<e:ENR-5 Number=\"ENR 5\" Toc=\"Yes\" id=\"ENR-5\">\r\n\t\t\t<e:Title Updated" +
                    "=\"No\">NAVIGATION WARNINGS</e:Title> ");
            
            #line 52 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("ENR-5"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 52 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 52 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:ENR-5> &eAIP-ENR-6; </e:ENR>\r\n\t<e:AD Number=\"Part 3\" Toc=\"No\" id=\"AD\">\r\n\t\t<e" +
                    ":Title Updated=\"No\">AERODROMES (AD)</e:Title>\r\n\t\t<e:AD-0 Number=\"AD 0\" Toc=\"No\" " +
                    "id=\"AD-0\">\r\n\t\t\t<e:Title Updated=\"No\"> </e:Title> ");
            
            #line 56 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("AD-0"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 56 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 56 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:AD-0>\r\n\t\t<e:AD-1 Number=\"AD 1\" Toc=\"Yes\" id=\"AD-1\">\r\n\t\t\t<e:Title Updated=\"No" +
                    "\">AERODROMES/HELIPORTS — INTRODUCTION</e:Title> ");
            
            #line 58 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.Sections.Where(x=>x.StartsWith("AD-1"))) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-");
            
            #line 58 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 58 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:AD-1>\r\n\t\t<e:AD-2 Number=\"AD 2\" Toc=\"Yes\" id=\"AD-2\">\r\n\t\t\t<e:Title Updated=\"No" +
                    "\">AERODROMES</e:Title> ");
            
            #line 60 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.AirportList) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-AD-");
            
            #line 60 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 60 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:AD-2>\r\n\t\t<e:AD-3 Number=\"AD 3\" Toc=\"Yes\" id=\"AD-3\">\r\n\t\t\t<e:Title Updated=\"No" +
                    "\">HELIPORTS</e:Title> ");
            
            #line 62 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 foreach (string section in Data.HeliportList) { 
            
            #line default
            #line hidden
            this.Write(" &eAIP-AD-");
            
            #line 62 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Lib.w(section)));
            
            #line default
            #line hidden
            this.Write("; ");
            
            #line 62 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" </e:AD-3>\r\n\t</e:AD>\r\n</e:eAIP>");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\CurrentProjects\Panda\AirNav\Aran\AIP\AIP.GUI\Templates\AIP\Speciman.tt"

private global::AIP.GUI.Classes.Speciman _DataField;

/// <summary>
/// Access the Data parameter of the template.
/// </summary>
private global::AIP.GUI.Classes.Speciman Data
{
    get
    {
        return this._DataField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool DataValueAcquired = false;
if (this.Session.ContainsKey("Data"))
{
    this._DataField = ((global::AIP.GUI.Classes.Speciman)(this.Session["Data"]));
    DataValueAcquired = true;
}
if ((DataValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Data");
    if ((data != null))
    {
        this._DataField = ((global::AIP.GUI.Classes.Speciman)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class SpecimanBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
