<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:controls="clr-namespace:WpfEnvelope.WpfShell.UI.Controls">

	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfEnvelope;component/Resources/ControlTemplates.xaml" />
        <ResourceDictionary Source="/WpfEnvelope;component/Resources/Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="LinkButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock x:Name="link" Text="{TemplateBinding Content}" TextDecorations="Underline" Foreground="Blue" Margin="3" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="link" Property="Foreground" Value="Red" />
							<Setter Property="Cursor" Value="Hand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ButtonBase}" x:Key="buttonBaseStyle">
		<Setter Property="Padding" Value="1.5" />
		<Setter Property="Foreground" Value="#FFFFFFFF" />
		<Setter Property="Background" Value="#D00A0A0A" />
		<Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
	</Style>

	<Style BasedOn="{StaticResource buttonBaseStyle}" TargetType="{x:Type Button}" x:Key="{x:Type Button}" />
	<Style BasedOn="{StaticResource buttonBaseStyle}" TargetType="{x:Type ToggleButton}" x:Key="{x:Type ToggleButton}" />

	<Style x:Key="StretchedContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>

	<Style x:Key="LoginStyle" TargetType="Border">
		<Setter Property="CornerRadius" Value="10, 0, 10, 0" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="AliceBlue" />
		<Setter Property="Border.BitmapEffect">
			<Setter.Value>
				<BitmapEffectGroup>
					<DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="2.5" Softness="0.7" Opacity="0.5" />
				</BitmapEffectGroup>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultBorderStyle" TargetType="Border">
		<Setter Property="CornerRadius" Value="10, 0, 10, 0" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="AliceBlue" />
		<Setter Property="Border.BitmapEffect">
			<Setter.Value>
				<BitmapEffectGroup>
					<DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="2.5" Softness="0.7" Opacity="0.5" />
				</BitmapEffectGroup>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultRectangleStyle" TargetType="Rectangle">
		<Setter Property="Stroke" Value="Black" />
		<Setter Property="StrokeThickness" Value="0" />
		<Setter Property="Fill" Value="AliceBlue" />
		<!--<Setter Property="Border.BitmapEffect">
			<Setter.Value>
				<BitmapEffectGroup>
					<DropShadowBitmapEffect Color="Black" Direction="320" 
								ShadowDepth="2.5" Softness="0.7" Opacity="0.5" />
				</BitmapEffectGroup>
			</Setter.Value>
		</Setter>-->
	</Style>

	<Style x:Key="DefaultContentStyle" TargetType="ContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid>
						<Rectangle Style="{StaticResource DefaultRectangleStyle}" />
						<ContentPresenter />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultPopupContentStyle" TargetType="ContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid>
						
						<ContentPresenter  />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key="ModalDialogStyle" TargetType="Window">
		<Setter Property="Width" Value="{Binding Source={x:Static Application.Current}, Path=MainWindow.Width}" />
		<Setter Property="Height" Value="{Binding Source={x:Static Application.Current}, Path=MainWindow.Height}" />
		<Setter Property="Top" Value="{Binding Source={x:Static Application.Current}, Path=MainWindow.Top}" />
		<Setter Property="Left" Value="{Binding Source={x:Static Application.Current}, Path=MainWindow.Left}" />
		<Setter Property="WindowState" Value="Normal" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Opacity" Value="0" />
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<Grid>
						<Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#5E000000" CornerRadius="10">
							<Border Style="{StaticResource DefaultBorderStyle}" Margin="10" HorizontalAlignment="Center"
									VerticalAlignment="Center" BorderThickness="1.5">

								<ContentPresenter Margin="10" />

							</Border>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<EventTrigger RoutedEvent="Loaded">
				<EventTrigger.Actions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.5" To="1" Storyboard.TargetProperty="Opacity" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger.Actions>
			</EventTrigger>
		</Style.Triggers>
	</Style>-->

	<Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightCoral" />
			<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightGray" />
		</Style.Resources>
		<Setter Property="Margin" Value="4,2,4,2" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Foreground" Value="Blue" />
				<Setter Property="Cursor" Value="Hand" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>