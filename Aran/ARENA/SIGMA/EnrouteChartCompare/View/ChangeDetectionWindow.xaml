<Window x:Class="EnrouteChartCompare.View.ChangeDetectionWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            mc:Ignorable="d" 
            Title="Enroute Chart Update Details"
            WindowStartupLocation="CenterScreen" 
            WindowStyle="SingleBorderWindow"
            ResizeMode="CanResizeWithGrip"
            Width="700" 
            Height="430"
            Cursor="{Binding CurrCursor}">
    <Window.Resources>
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="24"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
        </Style>

        <!--<Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                 Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                    Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="1.5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
        </Style>

        <DataTemplate x:Key="xs">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=FeatName}" Margin="8,6,0,6" FontSize="12" />
                <StackPanel Orientation="Horizontal" Name="secondPart">
                    <TextBlock Text=" - " Margin="8,6,0,6" FontSize="12" />
                    <TextBlock Text="{Binding Path=FeatureList.Count}" Margin="8,6,0,6" FontSize="12" />
                </StackPanel>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding FeatureList.Count}" Value="0">
                    <Setter TargetName="secondPart" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="0.6*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="135*" />
            <ColumnDefinition Width="421*" />
        </Grid.ColumnDefinitions>

        <ListBox Name="lstbSurfaces"
                 ItemsSource="{Binding Path=FeatureTypeList}"
                 SelectedItem="{Binding SelectedDetectFeatureType}"
                  ItemTemplate="{StaticResource xs}"
                 Margin="0,0,4,0" Grid.RowSpan="4"
                 BorderThickness="0.6 0.6 1.6 1.0"
                 BorderBrush="Black"
                 SelectionMode="Single"
                 Background="#FFF8F8F8"  Foreground="Black" >

        </ListBox>

        <Grid Grid.Row="0" Grid.Column="1" Margin="10,10,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <RadioButton Grid.Column="0" Width="110" Content="All" GroupName="StatusType" IsChecked="{Binding AllFeatureIsChecked}"/>
            <RadioButton Grid.Column="1" Width="110" Content="New" GroupName="StatusType" IsChecked="{Binding NewFeatureIsChecked}" />
            <RadioButton Grid.Column="2" Width="110" Content="Deleted" GroupName="StatusType" IsChecked="{Binding DeletedFeatureIsChecked}"/>
            <RadioButton Grid.Column="3" Width="110" Content="Changed" GroupName="StatusType" IsChecked="{Binding ChangedFeatureIsChecked}"/>
            <RadioButton Grid.Column="4" Width="110" Content="Missed" Visibility="Hidden" GroupName="StatusType" IsChecked="{Binding MissedFeatureIsChecked}"/>
            <!--<Label  Content="Feature Count : " Width="115" />
            <Label Grid.Column="1" Content="New : " Width="115" />
            <Label Grid.Column="2" Content="Deleted : " Width="115" />
            <Label Grid.Column="3" Content="Changed : " Width="115" />-->

        </Grid>
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <DataGrid Name="dGridRwy" Grid.Row="0" Margin="4,0,0,0" RowHeight="20" ItemsSource="{Binding FeatureItemList}" SelectedItem="{Binding SelectedFeature}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  AutoGenerateColumns="False" CanUserAddRows="False" Background="#AECBCBCB" BorderBrush="Black" BorderThickness="0.6">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Width="25" CanUserResize="False" IsReadOnly="False" Binding="{Binding IsChecked, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.Header>
                            <DockPanel>
                                <Border Name="border"
                                        Background="#BAFFFFFF">
                                    <CheckBox IsThreeState="False" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.AllSelected}"/>
                                </Border>
                            </DockPanel>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn Header="Identifier" IsReadOnly="True"  Binding="{Binding Id}" Width="150"/>
                    <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Name}" Width="170"/>
                    <DataGridTextColumn  Header="Status" IsReadOnly="True" Binding="{Binding ChangedStatus}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top">
                <Label Content="Feature Count :" VerticalAlignment="Top" />
                <TextBlock Text="{Binding FeatureCount}"  Margin="-20 0 0 0" HorizontalAlignment="Left"/>
            </StackPanel>

        </Grid>

        <Border Grid.Row="2" Grid.Column="2" Margin="4,14,0,4" BorderThickness="0.6" BorderBrush="Black" Background="#FFF8F8F8" Grid.ColumnSpan="2">
            <DataGrid RowHeight="20" ItemsSource="{Binding FieldLogList}" CanUserAddRows="False" CanUserDeleteRows="False" SelectedItem="{Binding SelectedFieldLog}"  Margin="4" AutoGenerateColumns="False" Background="#AECBCBCB" BorderBrush="Black" BorderThickness="0.6" Grid.ColumnSpan="2">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Field Name" IsReadOnly="True"  Binding="{Binding FieldName}" Width="150"/>
                    <DataGridTextColumn Header="Old Value" IsReadOnly="True" Binding="{Binding OldValueText}" Width="130"/>
                    <DataGridTextColumn  Header="New Value" IsReadOnly="True" Binding="{Binding NewValueText}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

        </Border>
        <Grid Grid.Row="3" Grid.Column="2" HorizontalAlignment="Right" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="94" />
                <ColumnDefinition Width="96" />
            </Grid.ColumnDefinitions>

            <Button  Name="btnExport"
                            Grid.Column="5" Width="78" 
                            Content="Save Report"
                            Margin="0 5 5 0"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            IsEnabled="{Binding SaveIsEnabled}"
                            Command="{Binding SaveReportCommand}"
                            Height="28" />
        </Grid>

    </Grid>
</Window>
