<Window x:Class="EnrouteIntersect.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:cntrls="clr-namespace:WpfExtensions.Controls;assembly=WpfExtensions"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		Title="Route Intersection Definition"
        WindowStartupLocation="CenterScreen" 
        WindowStyle="SingleBorderWindow"
        Closing="Window_Closing"
        ResizeMode="NoResize"
        Width="400"
        Height="400">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>
    <Grid>
		<Grid.RowDefinitions>			
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="30"></RowDefinition>
		</Grid.RowDefinitions>
        <StackPanel HorizontalAlignment="Right" Grid.Row="0" Orientation="Horizontal">
            <TextBlock Margin="5">Radius</TextBlock>
            <xctk:IntegerUpDown Value="{Binding Radius}" Width="50" Margin="5"></xctk:IntegerUpDown>
        </StackPanel>
        <DataGrid Name="dgRoutes" 
                  SelectionMode="Single" 
                  CanUserResizeColumns="False" 
                  CanUserAddRows="False" 
                  CanUserDeleteRows="False" 
                  AutoGenerateColumns="False"
				  Margin="3"
                  Grid.Row="1" 
                  ItemsSource="{Binding CrossRoutes}"
                  SelectedItem="{Binding SelectedRoute}"
                  RowDetailsVisibilityMode="VisibleWhenSelected">
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical">
                                <TextBlock TextDecorations="Underline" xml:space="preserve" FontWeight="Bold">&#x09;Enroute&#x09;&#x09;Route Segment</TextBlock>
                                <TextBlock HorizontalAlignment="Left" Foreground="Blue"
                            TextWrapping="Wrap"
                            Text="{Binding Detail}"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Right" Margin="15 0" Orientation="Horizontal">
                                <Button Margin="15 0"
                                    Width="30" 
                                    Height="30" 
                                    ToolTip="Restore to default line"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"                                        
                                    Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsRestorable, Converter={StaticResource BoolToVis}}"
                                    Command="{Binding RestoreCommand}">
                                    <Image Stretch="Fill" Source="/EnrouteIntersect;component/Resources/restore.png"></Image>
                                </Button>
                                <Button Margin="5 0"
                                    Width="30" 
                                    Height="30" 
                                    ToolTip="Rotate by-pass"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    Command="{Binding ChangeRotationCommand}">
                                    <Image Stretch="Fill" Source="/EnrouteIntersect;component/Resources/rotate.png"></Image>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Width="30" IsReadOnly="False" Binding ="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <CheckBox Margin="3" 
										  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CheckedAll}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn IsReadOnly="True" Width="*" Header="Intersecting route segments" Binding="{Binding Header}">
                        <DataGridColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridColumn.HeaderStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>                
            </DataGrid>
        <cntrls:LoadingPanel HorizontalAlignment="Center" 
                             VerticalAlignment="Center" 
                             Grid.Row="1"							 
                             IsLoading="{Binding IsLoading}">
        </cntrls:LoadingPanel>
        <Grid Grid.Row="2">
            <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="2 0" Text="{Binding CrossedItemsText}"></TextBlock>
            <Button
                Width="60" 
                Margin="3" 
                HorizontalAlignment="Right"
                Command="{Binding ApplyCommand}">Apply</Button>
        </Grid>
    </Grid>
</Window>