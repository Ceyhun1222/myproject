<controls:MetroWindow x:Class="Aran.Delta.View.CreateAirspace"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:local="clr-namespace:Aran.Delta"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:i="http://schemas.microsoft.com/expression/"
            xmlns:viewModels="clr-namespace:Aran.Delta.ViewModels"
            xmlns:view="clr-namespace:Aran.Delta.View"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            xmlns:model="clr-namespace:Aran.Delta.Model"
            xmlns:tool="http://schemas.xceed.com/wpf/xaml/toolkit"
            xmlns:dmsControll="clr-namespace:DmsControll;assembly=DmsControll"
            xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
            mc:Ignorable="d"
            Title="Create Area"
            WindowStartupLocation="CenterScreen" 
            WindowStyle="SingleBorderWindow"
            ResizeMode="CanMinimize"
            Width="440"
            Height="auto"
            SizeToContent="Height"
            Cursor="{Binding CurrCursor}"
            Closing="Window_Closing"
            BorderThickness="1"
            Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
            GlowBrush="Black"
            IconOverlayBehavior="Never"
            >
    <!--BorderBrush="{DynamicResource AccentColorBrush}"-->
    <!--Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/AirspaceResource.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <TextBlock Text="{Binding Path=GlobalAccuracy, StringFormat='Current session accuracy is {0} m.'}" Margin="10 0 0 0"/>
            <TextBlock Text="{Binding Path=Resolution, StringFormat=' and resolution is {0} s.'}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="0">
            <ToolBarTray IsEnabled="True" Background="#FFF5F1ED">
                <ToolBar Band="0" BandIndex="0" Width="200" IsEnabled="True" Background="#FFF5F1ED"   BorderThickness="0.8" Margin="5 6 5 6" HorizontalAlignment="Left">
                    <ToggleButton IsChecked="{Binding DrawLineIsChecked}" Command="{Binding DrawLineCommand}" ToolTip="Draw Line">
                        <Image  Source="/Aran.Delta;component/images/edit.png" />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawCircleIsChecked}"  Margin="6 1 6 1" ToolTip="Draw Circle" >
                        <Image  Source="/Aran.Delta;component/images/circle.png" />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawCtrIsChecked}"   Margin="6 1 6 1" ToolTip="Draw Spatial Area" >
                        <Image  Source="/Aran.Delta;component/images/ctrairspace.png" />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawEllipseIsChecked}"   Margin="6 1 6 1" ToolTip="Draw Ellipse" >
                        <Image  Source="/Aran.Delta;component/images/ellipse.gif" />
                    </ToggleButton>

                    <ToggleButton  IsChecked="{Binding DrawTextAirspaceIsChecked}"   Margin="6 2 6 1" ToolTip="Insert text" >
                        <Image  Source="/Aran.Delta;component/images/insert-text.png" />
                    </ToggleButton>

                    <ToggleButton Visibility="Hidden" IsChecked="{Binding DrawArcByRadiusIsChecked}"   Margin="6 1 6 1" ToolTip="Draw Ellipse Airspace" >
                        <Image  Source="/Aran.Delta;component/images/arcbyradius.png" />
                    </ToggleButton>

                </ToolBar>
            </ToolBarTray>
            <StackPanel Orientation="Horizontal" Visibility="{Binding CircleRadiusIsVisible}">
                <TextBlock Text="Radius"  Margin="5 15 5 5"/>
                <TextBox Text="{Binding CircleRadius}" Margin="5 12 5 5" Width="80"/>
                <TextBlock Text="{Binding DistanceUnit}"  Margin="5 12 5 5"/>

            </StackPanel>
        </StackPanel>
        <TabControl SelectedIndex="{Binding SelectedAirspaceType}"    Margin="1 1" Grid.Row="2">
            <TabItem  Header="Point List"  Visibility="{Binding PointListIsVisible}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <DataGrid  Name="PtGrid" ClipboardCopyMode="ExcludeHeader" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Extended"  ItemsSource="{Binding PointList}" SelectedItem="{Binding SelectedPoint}"
                        Background="#AECBCBCB" BorderBrush="Black" BorderThickness="0.6"   Height="190" VerticalAlignment="Top" HorizontalAlignment="Left"
                        Margin="3,5,0,0" SelectionChanged="PtGrid_OnSelectionChanged">

                        <DataGrid.ContextMenu>
                            <ContextMenu >
                                <MenuItem Header="Remove" Command="{Binding RemoveCommand}"  />
                                <MenuItem Header="Copy" Click="MenuItem_OnClick" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Index"   Binding="{Binding Index}" Width="60"/>
                            <DataGridTextColumn Header="Lat(WGS 84)"   Binding="{Binding LatStr}" Width="120"/>
                            <DataGridTextColumn Header="Long(WGS 84)"  Binding="{Binding LongStr}" Width="120"/>
                            <DataGridTextColumn Header="Type"  Binding="{Binding Type}" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.CellStyle>
                            <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger  Property="IsSelected" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                    <Expander Grid.Row="1" Header="Added Point" IsExpanded="False"  Margin="3 4 0 4">
                        <StackPanel Orientation="Horizontal" Margin="3 3 3 3">
                            <dmsControll:DmsControl Name="DmsControl" Accuracy="{Binding ResolutionDecimalCount}"  Width="290"  Latitude="{Binding AddedLatitude,Mode=TwoWay}" Longtitude="{Binding AddedLongtitude,Mode=TwoWay}" 
                                                    LatitudeString="{Binding AddedLatitudeString,Mode=TwoWay}" LongtitudeString="{Binding AddedLongtitudeString, Mode=TwoWay}" Resolution="{Binding CoordinateResolution, Mode=TwoWay}"
                                                    
                                              Margin="-3 0 0 0" HorizontalAlignment="Left"/>

                            <StackPanel Orientation="Vertical">
                                <Button Margin="20 8 0 0" Height="23" KeyDown="UIElement_OnKeyDown" Command="{Binding AddPointCommand}"  IsEnabled="{Binding AddPointIsEnabled}" Click="Button_Click_1" Content="Add Point" Width="90"></Button>
                                <Button Margin="20 12 0 0" Height="23" Command="{Binding UpdatePointCommand}"  Content="Update Point" Width="90"></Button>
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                    <Expander Padding="5" Margin=" 3 4 0 4" IsExpanded="False" Grid.Row="2" Header="Take part of Airspace">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="2 5" VerticalAlignment="Top">
                            <TextBlock Text="Airspace :"/>
                            <ComboBox 
                                ItemsSource="{Binding FirAirspaceList}" 
                                SelectedItem="{Binding SelectedFirAirspace}"
                                controls:TextBoxHelper.ClearTextButton="True"
                                controls:TextBoxHelper.Watermark="Please select an item..."
                                IsEditable="True" DisplayMemberPath="Name" 
                                Width="150" Margin="10 0 0 0"
                                />
                            <CheckBox  IsChecked="{Binding DrawFirIsChecked}" Visibility="Visible" Content="Draw" Margin="88 4 0 0"/>
                        </StackPanel>
                    </Expander>
                    <Expander
                          OverridesDefaultStyle="True"
                          Header="Operations"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          IsExpanded="{Binding OperationIsExpanded}"
                          Grid.Row="3"
                          Width="440"
                          Margin="3 4 0 4"
                          >
                        <!--<GroupBox Padding="5" Grid.Row="3">
                        <GroupBox.Header>
                            <CheckBox x:Name="chkEnableBackup" IsChecked="{Binding ClipAreaIsChecked}">Clip Area</CheckBox>
                        </GroupBox.Header>-->
                        <Grid Margin="7 5" Width="440">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0">
                                <RadioButton Content="Clip" IsChecked="{Binding ClipIsChecked}" GroupName="FilterByDistance"/>
                                <RadioButton Content="Intersect" HorizontalAlignment="Right" Margin="60 0 0 0" IsChecked="{Binding IntersecIsChecked}" GroupName="FilterByDistance" />
                                <RadioButton Content="Union" HorizontalAlignment="Right" Margin="60 0 0 0" IsChecked="{Binding UnionIsChecked}" GroupName="FilterByDistance" />
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Grid.Row="1" Orientation="Horizontal" Margin="4 7" VerticalAlignment="Top">
                                <TextBlock Text="Airspace :"/>
                                <ComboBox ItemsSource="{Binding AirspaceList}"
                                          IsEditable="True" 
                                          DisplayMemberPath="Name"
                                          Width="150" Margin="10 0 0 0"
                                          SelectedItem="{Binding SelectedClipAirspace}"
                                             controls:TextBoxHelper.ClearTextButton="True"
                                controls:TextBoxHelper.Watermark="Please select an item..."
                            />
                                
                                <Button Content="Apply" Margin="77 0 0 0" Width="80"  Height="24" Command="{Binding ApplyOperationCommand}"  IsEnabled="{Binding ApplyCommandIsEnabled}"/>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <StackPanel Grid.Row="4" Margin="3,2,0,2"  Orientation="Horizontal">
                        <Button Margin="0,2" Command="{Binding ClearCommand}" VerticalAlignment="Bottom" Content="Clear"  Width="70" Height="24"/>
                        <Button Margin="200 2 0 2" IsDefault="True" HorizontalAlignment="Right" VerticalAlignment="Bottom" Content="Ok" Command="{Binding SaveCommand}" Width="70" Height="24"/>
                        <Button Margin="10 2 0 2" IsCancel="True"  VerticalAlignment="Bottom" Content="Cancel" Width="70" Height="24"  Command="{Binding CloseCommand}" HorizontalAlignment="Right" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="New Area" Visibility="{Binding MovingPointIsVisible}">
                <StackPanel Orientation="Vertical" Margin="3 4">
                    <dmsControll:DmsControl Accuracy="{Binding ResolutionDecimalCount}" Width="300" Latitude="{Binding MovingLatitude,Mode=TwoWay}" Longtitude="{Binding MovingLongtitude,Mode=TwoWay}" 
                                              Margin="4 5" HorizontalAlignment="Left"/>
                </StackPanel>

            </TabItem>
            <TabItem Header="TIZ Airspace" Visibility="{Binding TdzCreateIsVisible}">
                <Grid Grid.Row="1" Margin="3 5"  VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Center Point" Grid.Column="1" Margin="0 0"  HorizontalAlignment="Left">
                        <StackPanel Orientation="Vertical">
                            <ToggleButton IsChecked="{Binding TdzCenterPointIsChecked}"
                                       HorizontalAlignment="Left" Margin="3,4,0,3" Width="25">
                                <Image 
                            Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill"
                             Source="/Aran.Delta;component/images/chkByClick.png" />
                            </ToggleButton>
                            <dmsControll:DmsControl Accuracy="{Binding ResolutionDecimalCount}"  Width="280"  Latitude="{Binding TdzLatitude,Mode=TwoWay}" Longtitude="{Binding TdzLongtitude,Mode=TwoWay}" 
                                              IsEnabled="{Binding TdzCoordContEnabled}" Margin="-3 0 0 0" HorizontalAlignment="Left" />

                        </StackPanel>
                    </GroupBox>
                    <TextBlock Text="Radius :" Grid.Row="1" VerticalAlignment="Center" Width="90"  Margin="10,8"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1" Width="290" Margin="0 0" Height="21" Text="{Binding TdzRadius}" />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="1" Grid.Column="1" Margin="10,0,8,0" IsEnabled="False"  Text="{Binding DistanceUnit}"/>

                    <TextBlock Text="Direction :" Grid.Row="2" VerticalAlignment="Center" Width="90" Margin="10,8,10,8"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="2" Grid.Column="1" Width="290" Margin="0 0" Height="21" Text="{Binding TdzDirection}"  />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" Margin="10,0,8,0" IsEnabled="False"  Text="°"/>

                    <TextBlock Text="R Direction :" Grid.Row="3" VerticalAlignment="Center" Width="90" Margin="10,8"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="3" Grid.Column="1" Width="290" Height="21" Margin="0 0" Text="{Binding TdzRadiusDirection}" />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="3" Grid.Column="1" Margin="10,0,8,0" IsEnabled="False"  Text="{Binding DistanceUnit}"/>

                    <TextBlock Text="R Backward :" Grid.Row="4" VerticalAlignment="Center" Width="90"  Margin="10,8,10,8"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="4" Grid.Column="1" Width="290" Height="21" Margin="0 0" Text="{Binding TdzRadiusBackward}" />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="4" Grid.Column="1" Margin="10,0,8,0" IsEnabled="False"  Text="{Binding DistanceUnit}"/>

                    <TextBlock Text="Width :" Grid.Row="5" VerticalAlignment="Center" Width="90" Margin="10,8,10,8"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="5" Grid.Column="2" Width="290" Height="21" Margin="0 0" Text="{Binding TdzWidth}"  />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="5" Grid.Column="2" Margin="0,0,8,0" IsEnabled="False"  Text="{Binding DistanceUnit}"/>

                    <StackPanel Grid.Row="6" Grid.ColumnSpan="2" Margin="3" Height="40" Orientation="Horizontal">
                        <Button Margin="3,8" Command="{Binding ClearCommand}" Content="Clear"  Width="80" Height="24"/>
                        <Button  Grid.Row="6" Command="{Binding DrawTdzCommand}" Margin="160 8 3 8" Width="80"  Height="24" Content="Draw"></Button>
                        <Button Margin="4 3 3 3" Content="Save" Command="{Binding SaveCommand}" Width="80" Height="24"/>

                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem Header="Ellipse" Visibility="{Binding EllipseIsVisible}">
                <Grid Grid.Row="1" Margin="0 5 0 0"  VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                        <RowDefinition Height="52"/>
                        <RowDefinition Height="52"/>
                        <RowDefinition Height="52"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="21"/>
                        <ColumnDefinition Width="14"/>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Center Point" Grid.Column="3" Width="280" HorizontalAlignment="Left">
                        <StackPanel Orientation="Vertical">
                            <ToggleButton IsChecked="{Binding TdzCenterPointIsChecked}"
                                       HorizontalAlignment="Left" Margin="3,4,0,3" Width="25">
                                <Image 
                            Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill"
                             Source="/Aran.Delta;component/images/chkByClick.png" />
                            </ToggleButton>
                            <dmsControll:DmsControl Accuracy="{Binding ResolutionDecimalCount}"  Width="280"  Latitude="{Binding TdzLatitude,Mode=TwoWay}" Longtitude="{Binding TdzLongtitude,Mode=TwoWay}" 
                                              IsEnabled="{Binding TdzCoordContEnabled}" Margin="-3 0 0 0" HorizontalAlignment="Left" />

                        </StackPanel>
                    </GroupBox>
                    <TextBlock Text="Direction :" Grid.Row="1" VerticalAlignment="Center" Width="90" Margin="10,0" Grid.ColumnSpan="3"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="1" Grid.Column="3" Width="280" Height="21" Text="{Binding TdzDirection}" Margin="3,0"  />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="1" Grid.Column="3" Margin="3,18,10,18" IsEnabled="False"  Text="°"/>

                    <TextBlock Text="Major :" Grid.Row="2" VerticalAlignment="Center" Width="90" Margin="10,0" Grid.ColumnSpan="3"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="2" Grid.Column="3" Width="280" Height="21" Text="{Binding TdzRadiusDirection}" Margin="3,0" />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="2" Grid.Column="3" Margin="0,18,10,18" IsEnabled="False"  Text="{Binding DistanceUnit}"/>

                    <TextBlock Text="Minor :" Grid.Row="3" VerticalAlignment="Center" Width="90"  Margin="10,0" Grid.ColumnSpan="3"/>
                    <TextBox   HorizontalAlignment="Left" Grid.Row="3" Grid.Column="3" Width="280" Height="21" Text="{Binding TdzRadiusBackward}" Margin="3,0" />
                    <TextBlock  HorizontalAlignment="Right" Grid.Row="3" Grid.Column="3" Margin="10,18" IsEnabled="False"  Text="{Binding DistanceUnit}"/>

                    <StackPanel Grid.Row="4" VerticalAlignment="Bottom" Grid.ColumnSpan="4" Margin="3,0" Height="50" Orientation="Horizontal">
                        <Button Margin="3,8" Command="{Binding ClearCommand}" Content="Clear"  Width="80" Height="24"/>
                        <Button  Grid.Row="6" Command="{Binding DrawEllipseCommand}" Margin="160 8 3 8" Width="80"  Height="24" Content="Draw"></Button>
                        <Button Margin="4 3 3 3" Content="Save" Command="{Binding SaveCommand}" Width="80" Height="24"/>

                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem Header="Text format" Visibility="{Binding TextFormatIsVisible}">
                <Grid Margin="5 6 5 2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <TextBlock Text="Supported Format List :"/>
                        <ComboBox Name="SupportedFormatList" ItemsSource="{Binding WaterMarkList}" SelectedItem="{Binding SelectedWaterMark}" DisplayMemberPath="Title" Width="100" Height="23"/>
                    </StackPanel>

                    <GroupBox Header="Airspace definition text" Grid.Row="1">
                        <!--<AdornerDecorator>-->
                            <TextBox  TextAlignment="Left" VerticalAlignment="Top"
                                 Height="185" HorizontalContentAlignment="Stretch" MaxLines="12" Width="400" 
                                 AcceptsReturn="True" VerticalScrollBarVisibility="Auto" 
                                 HorizontalScrollBarVisibility="Auto"
                                 HorizontalAlignment="Left"   Margin="2"
                                 Text="{Binding AirspaceText}"
                                 controls:TextBoxHelper.UseFloatingWatermark="True"
                                 controls:TextBoxHelper.Watermark="{Binding Path=SelectedWaterMark.ExampleText}"/>

                            <!--<model:WatermarkService.Watermark>
                                    <TextBlock Name="WaterMark" ></TextBlock>
                                </model:WatermarkService.Watermark>-->

                        <!--</AdornerDecorator>-->
                        <!--<TextBox Text="{Binding AirspaceText}" TextAlignment="Left" VerticalAlignment="Top"
                                 Height="185" HorizontalContentAlignment="Stretch" MaxLines="12" Width="400" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" 
                                 HorizontalAlignment="Left"   Margin="2"></TextBox>-->
                    </GroupBox>
                   
                    <StackPanel Grid.Row="2" VerticalAlignment="Bottom" Margin="0 5" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button  Command="{Binding ViewTextFormatGeoCommand}" Margin="0 2 0 2" Width="70"  Height="24" Content="Apply"></Button>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</controls:MetroWindow>
