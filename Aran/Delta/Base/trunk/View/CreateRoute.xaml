<controls:MetroWindow x:Class="Aran.Delta.View.CreateRoute"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tool="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        xmlns:model="clr-namespace:Aran.Delta.Model"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        WindowStyle="SingleBorderWindow"
        Title="Create/Edit Route"
        Height="470" Width="610"
        Closing="Window_Closing"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        BorderThickness="1"
        GlowBrush="Black"
        IconOverlayBehavior="Never">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/AirspaceResource.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--<Style TargetType="ComboBox">
                <Setter Property="Height" Value="24"/>
            </Style>-->
            <Style TargetType="TextBox">
                <Setter Property="Width" Value="140"></Setter>
                <Setter Property="Height" Value="25"></Setter>
            </Style>

        </ResourceDictionary>
       
    </Window.Resources>
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <TabControl SelectedIndex="{Binding SelectedOperType}" Grid.Row="0">
            <TabItem Header="Create New">
                <StackPanel Orientation="Horizontal" Grid.Row="0" Visibility="{Binding NameVisibility}" Margin="5 12" VerticalAlignment="Center">
                    <TextBlock Text="Route Name :" VerticalAlignment="Center" />
                    <TextBox Text="{Binding RouteName}" 
                              controls:TextBoxHelper.UseFloatingWatermark="True"
                              controls:TextBoxHelper.Watermark="Please select an item..." 
                              Margin="20 1"></TextBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="Edit existence Route" Visibility="{Binding EditIsVisible}">
                <StackPanel Orientation="Horizontal" Grid.Row="0" Visibility="{Binding NameVisibility}" Margin="5 12" VerticalAlignment="Center">
                    <TextBlock Text="Route Name :" VerticalAlignment="Center" />
                    <ComboBox Text="Routes : " Margin="20 1" controls:TextBoxHelper.ClearTextButton="True"
                            controls:TextBoxHelper.Watermark="Please select an item..." Width="180"  ItemsSource="{Binding RouteList}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedRoute}" VerticalAlignment="Center" />
                </StackPanel>
                
            </TabItem>
        </TabControl>
      
        <GroupBox Grid.Row="1" Header="Route Segments" BorderBrush="DarkGray">
            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <model:CustomDataGrid AutoGenerateColumns="False" Grid.IsSharedSizeScope="True" x:Name="DGrid" IsReadOnly="False" SelectionMode="Extended" SelectedItemsList="{Binding SelectedSegmentList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding SegmentList}" SelectedItem="{Binding SelectedSegment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        Background="#AECBCBCB" CanUserAddRows="False"  BorderBrush="Black" BorderThickness="0.6" Width="auto"  Height="auto" MinHeight="200" VerticalAlignment="Top" Margin="3 5">
                    <DataGrid.Columns>
                        <DataGridComboBoxColumn  Header="Start Point" DisplayMemberPath="Name" 
                                        SelectedValueBinding="{Binding Path=SelectedStartPoint,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"   Width="100">
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ComboBox.ItemsSource" Value="{Binding Path=StartPointList}" />
                                    <Setter Property="IsReadOnly" Value="{Binding StartPtIsReadOnly}"/>
                                    <Setter Property="IsDropDownOpen" Value="True" />
                                    <Setter Property="MaxHeight" Value="20.0" />
                                    <Setter Property="MinHeight" Value="20.0" />
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ComboBox.ItemsSource" Value="{Binding Path=StartPointList}" />
                                    <Setter Property="IsReadOnly" Value="{Binding StartPtIsReadOnly}"/>
                                    <Setter Property="IsDropDownOpen" Value="True" />
                                    <Setter Property="MaxHeight" Value="20.0" />
                                    <Setter Property="MinHeight" Value="20.0" />
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                        <DataGridComboBoxColumn  Header="End Point"  DisplayMemberPath="Name" 
                                        SelectedValueBinding="{Binding Path=SelectedEndPoint,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}" IsReadOnly="False" Width="100">
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ComboBox.ItemsSource" Value="{Binding Path=EndPointList}" />
                                    <Setter Property="IsDropDownOpen" Value="True" />
                                    <Setter Property="MaxHeight" Value="20.0" />
                                    <Setter Property="MinHeight" Value="20.0" />
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ComboBox.ItemsSource" Value="{Binding Path=EndPointList}" />
                                    <Setter Property="IsDropDownOpen" Value="True" />
                                    <Setter Property="MaxHeight" Value="20.0" />
                                    <Setter Property="MinHeight" Value="20.0" />
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="Direction"   Binding="{Binding Direction}" Width="80"/>
                        <DataGridTextColumn Header="Length"  Binding="{Binding Length}" Width="80"/>
                        <DataGridTextColumn Header="Status"  Binding="{Binding Status}" Width="80"/>
                        <DataGridTemplateColumn  Header="Open Fields" Visibility="{Binding OpenFieldsIsVisible}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Margin="1" Width="20" Height="18" Command="{Binding OpenSegmentCommand}" VerticalContentAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock VerticalAlignment="Center">+</TextBlock>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    
                    <DataGrid.CellStyle>
                        <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger  Property="IsSelected" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Split Segment" Command="{Binding SplitCommand}"  />
                            <MenuItem Header="Join Segments" Command="{Binding JoinCommand}"  />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </model:CustomDataGrid>
               <StackPanel Grid.Column="1" Orientation="Vertical" Margin="2" VerticalAlignment="Top">
                    <Button Content="+" Command="{Binding AddCommand}" Margin="4" Width="30" Height="30" />
                    <Button Content="-" Command="{Binding RemoveCommand}" Margin="4" Width="30" Height="30"/>
                    <!--<Button Content="All" Command="{Binding ApplyAllCommand}" Margin="4" Width="30" Height="30"/>-->
                </StackPanel>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Margin="0,5" Content="Ok" Command="{Binding SaveCommand}" IsEnabled="{Binding SaveIsEnabled}" Width="80" Height="24"/>
            <Button Content="Cancel" Height="24" Width="80" Margin="10,0,0,-1" IsCancel="True" Command="{Binding CloseCommand}" ></Button>
        </StackPanel>
    </Grid>
</controls:MetroWindow>
