using ESRI.ArcGIS.Geodatabase;
using ESRI.ArcGIS.Framework;
using ESRI.ArcGIS.DataSourcesFile;
using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Diagnostics;
using System.Drawing;
using System.Windows;
using System.Windows.Forms;

namespace Aran.PANDA.RNAV.Departure
{
	[System.Runtime.InteropServices.ComVisible(false)]
	public static class FileRoutines
	{
		public static void GetShortData(byte[] data, ref uint index, out short Vara, int size)
		{
			Vara = 0;

			for (int i = 0, j = 0; i < size; i++, j += 8)
				Vara += (short)(data[index + i] << j);

			index += (uint)size;
		}

		public static void GetStrData(byte[] data, ref uint index, out string Vara, int size)
		{
			Vara = "";

			for (int i = 0; i < size; i++)
				Vara += (char)data[index + i];

			index += (uint)size;
		}

		public static void GetPStrData(byte[] data, ref uint index, out string Vara)
		{
			short size;
			GetShortData(data, ref index, out size, 2);

			Vara = "";

			for (int i = 0; i < size; i++)
				Vara += (char)data[index + i];

			index += (uint)size;
		}

		public static void GetCStrData(byte[] data, ref uint index, out string Vara)
		{
			Vara = "";

			int i = data[index];
			int size = 1;

			while (i != 0)
			{
				Vara += (char)i;
				i = data[index + size];
				size++;
			}

			index += (uint)size;
		}

		public static void GetDoubleData(byte[] data, ref uint index, out double Vara, int size)
		{
			int i;
			double mantissa = 0;

			for (i = 0; i < size - 2; i++)
				mantissa = data[index + i] + 0.00390625 * mantissa;

			mantissa = 0.0625 * (((data[index + size - 2] & 15) + 16) + 0.00390625 * mantissa);

			int exponent = System.Convert.ToInt32(0.0625 * (data[index + size - 2] & 240));
			exponent = System.Convert.ToInt32(data[index + size - 1] * 16.0 + exponent);

			if ((mantissa == 1) && (exponent == 0))
			{
				Vara = 0.0;
				index += (uint)size;
				return;
			}

			int sign = exponent & 2048;
			exponent = (exponent & 2047) - 1023;

			if (exponent > 0)
				for (i = 0; i < exponent; i++)
					mantissa = mantissa * 2.0;
			else if (exponent < 0)
				for (i = -1; i >= exponent; i--)
					mantissa = 0.5 * mantissa;

			if (sign != 0)
				mantissa = -mantissa;

			Vara = mantissa;
			index += (uint)size;
		}

		public static void GetData(byte[] data, ref uint index, out byte[] Vara, int size)
		{
			if (size > -1)
				Vara = new byte[size]; //--- Checked
			else
				Vara = new byte[0];

			for (int i = 0; i < size; i++)
				Vara[i] = data[index + i];

			index += (uint)size;
		}

		public static void OpenTableFromFile(ref ITable pTable, string sFolderName, string sFileName)
		{
			IWorkspaceFactory pFact = new ShapefileWorkspaceFactory();
			IWorkspace pWorkspace = pFact.OpenFromFile(sFolderName, GlobalVars.GetApplicationHWnd());
			pTable = ((IFeatureWorkspace)(pWorkspace)).OpenTable(sFileName);
		}
	}
}

/*
	public struct AnPlanResData
	{
		public string Sign; //    ?????????
		public int Ders; //    ?????????? Der
	}

	public struct DerData
	{
		public string Name; //    ???????? RWY
		public int parts; //    ?????????? ??????
		public int LastStage; //    ????????? ??????????? ????
	}

	public struct StageData
	{
		public int Length; //    ????? ? ??????
		public int Sign; //    ?????????
		public string Owner; //    ???????? ???????????
		public int Status; //    ?????????????? ?????
	}

	public struct StraightDepartData
	{
		public int Length; //    ????? ? ??????
		public int Sign; //    ?????????
		public string RWYCode; //    ???????? RWY
		public int Status; //    ?????????????? ?????
		public double DepartCourse; //    ???? ??????
		public string Navaid; //    ??? ?????????
		public double DerShift; //    ???????? ?? DER
		public double DesignPDG; //    ????????? PDG
		public double Ht33; //    ?????? ??????????? ? ???. ?????????
		public double Dt33; //    ?????????? ??????????? ? ???. ?????????
		public double DepDist; //    ?????????? ??????????? ??? ??????
	}

	public struct OmniDepartData
	{
		public int Length; //    ????? ? ??????
		public int Sign; //    ?????????
		public string RWYCode; //    ???????? RWY
		public int Status; //    ?????????????? ?????
		public double TnIA_PDG; //    ????????? ???????? ? ???
		public double TnIA_HtNom; //    ?????? ??????????? ? ???. ????????? ? ???
		public double TnIA_D; //    ????????????? ???
		public double TnA_PDG; //    ????????? ???????? ? ??
		public double TNA_H; //    ?????? ? ?????? ?????????
		public double DepDist; //    ?????????? ??????????? ??? ??????
	}
*/