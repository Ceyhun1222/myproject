<Window x:Class="Aran.Panda.RadarMA.View.MainForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:choosePointNs="clr-namespace:ChoosePointNS;assembly=ChoosePointA"
            xmlns:system="clr-namespace:System;assembly=mscorlib"
            xmlns:view="clr-namespace:Aran.Panda.RadarMA.View"
            xmlns:converter="clr-namespace:Aran.Panda.RadarMA.Converter"
            mc:Ignorable="d" 
            SizeToContent="WidthAndHeight"
            MinHeight="200"
            Title="{Binding Title}"
            Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
            Closing="MainForm_OnClosing"
            ResizeMode="CanMinimize"
            Cursor="{Binding CurrCursor}"
        >
    <Window.Resources>

            <converter:HeightToDisplayConverter x:Key="HeightDisplayConverter" />
            <converter:DistanceDisplayConverter x:Key="DistanceDisplayConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Color x:Key="detailMark">#FFA1A9B3</Color>
        <SolidColorBrush x:Key="detailMarkBrush" Color="{StaticResource ResourceKey=detailMark}" />
        <Style x:Key="flatTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Rectangle  Stroke="{StaticResource ResourceKey=detailMarkBrush}" StrokeThickness="1"/>
                            <TextBox Margin="1" Text="{TemplateBinding Text}" BorderThickness="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontStretch" Value="UltraExpanded"></Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Width" Value="60"></Setter>
        </Style>
        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <ControlTemplate x:Key="SimpleExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                    <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                    <Path x:Name="Sign"
                      Grid.Column="0"
                      Data="M 0,5 H 10 M 5,0 V 10 Z"
                      Stroke="#FF666666"
                      Width="10"
                      Height="10"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      />
                    <ContentPresenter x:Name="HeaderContent"
                                  Grid.Column="1"
                                  Margin="4,0,0,0"
                                  ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <!--Change the sign to minus when toggled-->
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Data" TargetName="Sign" Value="M 0,5 H 10 Z"/>
                </Trigger>

                <!-- MouseOver, Pressed behaviours-->
                <Trigger Property="IsMouseOver"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Sign"/>
                </Trigger>
                <Trigger Property="IsPressed"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                    <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Sign"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Simple Expander Template-->
        <ControlTemplate x:Key="SimpleExpanderTemp" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource SimpleExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
                </ToggleButton>
                <ContentPresenter x:Name="ExpanderContent"
                                  Visibility="Collapsed"
                                  DockPanel.Dock="Bottom"/>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Animated Expander Button's Template-->
        <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                    <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                    <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 1,1.5 L 4.5,5 8,1.5"
                      Stroke="#FF666666"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      >
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>
                    <ContentPresenter x:Name="HeaderContent"
                                      Grid.Column="1"
                                      Margin="4,0,0,0"
                                      ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <!-- Animate arrow when toggled-->
                <Trigger Property="IsChecked"
                         Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <!-- MouseOver, Pressed behaviours-->
                <Trigger Property="IsMouseOver"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
                </Trigger>
                <Trigger Property="IsPressed"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                    <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Stretch Out Content Expander's Template,
        Uses: AnimatedExpanderButtonTemp from above-->
        <ControlTemplate x:Key="StretchyExpanderTemp" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource AnimatedExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
                </ToggleButton>
                <ContentPresenter x:Name="ExpanderContent"
                                  ContentSource="Content"
                                  DockPanel.Dock="Bottom"
                                  >
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="0"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"                                                 
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <TabControl SelectedIndex="{Binding StepNumber}">
            <TabItem Header="Select Radar Point" Visibility="{Binding RadarSelectPointTabVisible,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="3,10">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="210"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="117"/>
                        <ColumnDefinition Width="190"/>
                        <ColumnDefinition Width="117"/>
                        <ColumnDefinition Width="160"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="AirportHeliport : "  Grid.Column="0" Grid.Row="0"></TextBlock>
                    <ComboBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" ItemsSource="{Binding AdhpList}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedAdhp}" Height="25" Width="120"></ComboBox>

                    <TextBlock Text="Radar Point" Grid.Row="0" Grid.Column="2"></TextBlock>
                    <!--<TextBlock Text="{Binding PointListText}" Margin="5,16,0,15"  Width="80" Grid.Column="0" Grid.Row="1"></TextBlock>-->
                    <ComboBox Grid.Row="0" Grid.Column="3" Margin="0,13" HorizontalAlignment="Left"  Height="25" ItemsSource="{Binding RadarPointList}" SelectedItem="{Binding SelectedRadarPoint}" DisplayMemberPath="Name" Visibility="{Binding PointListIsVisible}"   Width="120"></ComboBox>

                    <TextBlock Text="Radar Operation Distance : " TextWrapping="Wrap" Grid.Column="0" Grid.Row="1"></TextBlock>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
                        <TextBox Margin="0,13" HorizontalAlignment="Left"  Text="{Binding RadarOperationDistance,Converter={StaticResource DistanceDisplayConverter}}"  PreviewTextInput="TxtLatDeg_OnPreviewTextInput" Height="25"  Width="120"></TextBox>
                        <TextBlock Text="{Binding DistanceUnit}" TextWrapping="Wrap"  Margin="10 0"></TextBlock>
                    </StackPanel>


                    <TextBlock Text="Radar Circle Radius : " TextWrapping="Wrap" Grid.Column="2" Grid.Row="1"></TextBlock>
                    <StackPanel Orientation="Horizontal" Grid.Column="3" Grid.Row="1">
                        <TextBox  Margin="0,13" HorizontalAlignment="Left"  Text="{Binding RadarCircleRadius,Converter={StaticResource DistanceDisplayConverter}}"  PreviewTextInput="TxtLatDeg_OnPreviewTextInput" Height="25"  Width="120"></TextBox>
                        <TextBlock Text="{Binding DistanceUnit}" TextWrapping="Wrap"  Margin="10 0"></TextBlock>
                    </StackPanel>
                    <!--<CheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,3" IsChecked="{Binding DrawRadarCircleIsChecked}" Content="Draw Radar Circle" HorizontalAlignment="Left"   Height="25"  Width="120"/>-->

                    <TextBlock Text="Elevation Rounding : " TextWrapping="Wrap"  Grid.Column="2" Grid.Row="2" Margin="0,9,0,10" Width="117"></TextBlock>
                    <StackPanel Grid.Row="2" Grid.Column="3" Orientation="Horizontal">
                        <TextBox  Margin="0,13" HorizontalAlignment="Left"  Text="{Binding ElevationRounding}"  PreviewTextInput="TxtLatDeg_OnPreviewTextInput" Height="25"  Width="120"></TextBox>
                        <TextBlock Text="{Binding HeightUnit}" TextWrapping="Wrap"  Margin="10 0"></TextBlock>
                    </StackPanel>
                    <TextBlock Text="Raster Layer" Grid.Row="2" Width="80" Grid.Column="0"/>
                    <ComboBox Grid.Row="2" Margin="0,13" HorizontalAlignment="Left" Height="25" ItemsSource="{Binding RasterLayerList}" SelectedItem="{Binding SelectedRaster}" DisplayMemberPath="Name"  Grid.Column="1" Width="120"/>
                    <GroupBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" Header="Select Radar Area">
                        <StackPanel Orientation="Horizontal" Margin="0 10">
                            <RadioButton GroupName="AirspaceSelector" IsChecked="True" Name="RdbAirspaceFromRadarArea" Content="Select Radar Area from Airspaces"/>
                            
                            <RadioButton GroupName="AirspaceSelector" Margin="30 0 0 0" Name="RdbRadarAreaFromCircle" Content="Create Radar Area from Circle"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="4" Header="Radar Vectoring Area">
                        <GroupBox.Style>
                            <Style TargetType="GroupBox">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=RdbAirspaceFromRadarArea,Path=IsChecked}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>
                        <StackPanel Orientation="Vertical" Margin="5">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Airspaces"  TextWrapping="Wrap" ></TextBlock>
                                <ComboBox  Margin="0,13" HorizontalAlignment="Left"  Height="25" ItemsSource="{Binding AirspaceList}" SelectedItem="{Binding SelectedAirspace}" DisplayMemberPath="Name" Width="120"/>
                                <Button  Width="80" Height="24" Margin="20 0 0 0" Command="{Binding AddAirspaceCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/apply.gif" />
                                        <TextBlock Margin="5 0 0 0">Add</TextBlock>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    <DataGrid   Name="PtGrid" VerticalScrollBarVisibility="Visible" ClipboardCopyMode="ExcludeHeader" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single"  ItemsSource="{Binding VectoringAreaList}" SelectedItem="{Binding SelectedVectoringArea}"
                            Background="#AECBCBCB" BorderBrush="Black"  BorderThickness="0.6" Width="560"  Height="120" VerticalAlignment="Top"
                                           >
                                        <DataGrid.ContextMenu>
                                            <ContextMenu >
                                                <MenuItem Header="Remove" Command="{Binding RemoveAirspaceCommand}"  />
                                            </ContextMenu>
                                        </DataGrid.ContextMenu>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Id"   Binding="{Binding Id}" Width="70"/>
                                            <DataGridTextColumn Header="Name"   Binding="{Binding Name}" Width="150"/>
                                            <DataGridTextColumn Header="Type"   Binding="{Binding Type}" Width="150"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </ScrollViewer>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    
                    <GroupBox Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="4" VerticalAlignment="Top" Header="Radar Vectoring Area">
                        <GroupBox.Style>
                            <Style TargetType="GroupBox">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=RdbRadarAreaFromCircle,Path=IsChecked}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Center"/>
                            <ComboBox ItemsSource="{Binding RadarPointList}" DisplayMemberPath="Name" Margin="20 0 40 0" Height="24" Width="100" SelectedItem="{Binding SelectedCircleCenter}"/>

                            <TextBlock Text="Radius" Height="24" />
                            <TextBox  Margin="20 0 10 0" Text="{Binding RadarAreaRadius,Converter={StaticResource DistanceDisplayConverter}}" Height="24" Width="100"/>
                            <TextBlock  Margin="5 0" Text="{Binding DistanceUnit}"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Create Sector" Visibility="{Binding CreateSectorIsVisible,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"/>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Margin="5,10" Orientation="Horizontal">
                        <TextBlock Text="Draw Sector :"/>
                        <ToggleButton IsChecked="{Binding CreateSectorIsChecked,Mode=TwoWay}" IsEnabled="{Binding LeftPointPickerIsEnabled}" Name="StartClick" 
                                      HorizontalAlignment="Left" Margin="5,0,0,0" Width="25"   >
                            <Image 
                            Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill"
                                Source="/Aran.Panda.RadarMA;component/image/edit.png"
                              />
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding CreateCircleIsChecked,Mode=TwoWay}" IsEnabled="{Binding LeftPointPickerIsEnabled}" 
                                      HorizontalAlignment="Left" Margin="5,0,0,0" Width="25"   >
                            <Image 
                            Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill"
                                Source="/Aran.Panda.RadarMA;component/image/circle.png"
                              />
                        </ToggleButton>
                        <Button Content="Merge with Closest Sectors" HorizontalAlignment="Right" Margin="340 0 0 0" IsEnabled="{Binding MergeSectorIsEnabled}" Command="{Binding MergeSectorsCommand}"/>
                    </StackPanel>

                    <GroupBox  Grid.Row="1" Margin="5 10" Header="Sector Parametrs">
                        <StackPanel Orientation="Horizontal" Margin="0 5">
                            <TextBlock Text="Sector Elevation :" />
                            <TextBox Margin="2 0 0 0" Text="{Binding SectorElevation,Converter={StaticResource HeightDisplayConverter}}" PreviewTextInput="TxtLatDeg_OnPreviewTextInput"/>
                            <TextBlock Text="{Binding HeightUnit}" Margin="3 0" />

                            <TextBlock Text="MOC :" Margin="12 0 0 0" />
                            <ComboBox Margin="5,0,0,0" 
                                      ItemsSource="{Binding MOCList}" 
                                      SelectedValue="{Binding SelectedMOCValue}" 
                                      Width="70">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=.,Converter={StaticResource HeightDisplayConverter}}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock Text="{Binding HeightUnit}" Margin="5 0" />

                            <TextBlock Text="Buffer Value :" Margin="12 0 0 0" />
                            <ComboBox Margin="5,0,0,0"
                                      ItemsSource="{Binding BufferValueList}" 
                                      SelectedValue="{Binding SelectedBufferValue}"
                                      Width="55">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=., Converter={StaticResource DistanceDisplayConverter}}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock Text="{Binding DistanceUnit}" Margin="5 0" />

                            <CheckBox Content="Show Buffer" IsChecked="{Binding DrawBufferIsChecked}" VerticalAlignment="Center" Margin="20 2 8 2"/>
                        </StackPanel>
                    </GroupBox>

                    <StackPanel Grid.Row="2" Margin="5 10">
                        <StackPanel.Resources>
                            <Style x:Key="TestContentStyle" TargetType="Button">
                                <Setter Property="Content" Value="Test Button"/>
                                <Setter Property="MinWidth" Value="80"/>
                                <Setter Property="MinHeight" Value="140"/>
                            </Style>
                        </StackPanel.Resources>

                        <!--<Expander Template="{StaticResource SimpleExpanderTemp}"-->
                        <Expander Template="{StaticResource StretchyExpanderTemp}"
                          OverridesDefaultStyle="True"
                          Header="Operations"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          IsExpanded="False"
                          >
                            <!--<GroupBox Padding="5" Grid.Row="2" Margin="5 5" Header="Operation">-->
                            <Grid Height="180">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition MinHeight="100"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="310"/>
                                    <ColumnDefinition Width="310"/>
                                </Grid.ColumnDefinitions>
                                <GroupBox Grid.Row="0" Padding="5" Grid.Column="0"  Margin="1 2" Header="Difference from other Sectors">
                                    <StackPanel  Orientation="Horizontal" Margin="0 5" VerticalAlignment="Top">
                                        <CheckBox Content="Show Operation Result"/>
                                        <Button Content="Apply" Width="60" Margin="87 0 0 0" IsEnabled="{Binding DifferFromSectorIsEnabled}" Command="{Binding DifferFromSectorCommand}" HorizontalAlignment="Right"/>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Grid.Row="0" Padding="5" Grid.Column="1"   Margin="5 2" Header="Difference from Radar Operation Area">
                                    <StackPanel  Orientation="Horizontal" Margin="0 5" VerticalAlignment="Top">
                                        <CheckBox Content="Show Operation Result"/>
                                        <Button Content="Apply" Width="60" Margin="76 0 0 0" IsEnabled="{Binding DifferFromRadarOperAreaIsEnabled}" Command="{Binding DifferFromRadarOperArea}" HorizontalAlignment="Right"/>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox  Padding="5" Grid.Column="0" Grid.Row="1" Margin="1 7">
                                    <!--<GroupBox  Padding="5" Grid.Column="0" Grid.Row="1" Margin="1 7">-->
                                    <GroupBox.Header>
                                        <CheckBox  IsChecked="{Binding FilterByDistanceIsChecked}">Distance Operation</CheckBox>
                                        <!--<CheckBox  IsChecked="True">Filter by Distance</CheckBox>-->
                                    </GroupBox.Header>
                                    <!--<StackPanel Orientation="Vertical" vis Visibility="{Binding FilterByDistanceIsVisible}">-->
                                    <StackPanel Orientation="Vertical" IsEnabled="{Binding FilterByDistanceIsChecked}">
                                        <StackPanel Orientation="Horizontal" Margin="0 5" VerticalAlignment="Top">
                                            <RadioButton Content="Intersect" IsChecked="{Binding IntersectIsChecked}" GroupName="FilterByDistance"/>
                                            <RadioButton HorizontalAlignment="Right" Margin="40 0 0 0" IsChecked="{Binding DifferenceIsChecked}" GroupName="FilterByDistance" Content="Difference"/>
                                        </StackPanel>

                                        <StackPanel  Orientation="Horizontal" Margin="0 5" VerticalAlignment="Top" >
                                            <TextBlock Text="Radius from Radar :"/>
                                            <TextBox   Margin="0 0 0 0" Text="{Binding FilterCircleRadius,Converter={StaticResource DistanceDisplayConverter},UpdateSourceTrigger=PropertyChanged}"  PreviewTextInput="TxtLatDeg_OnPreviewTextInput"/>
                                            <TextBlock  Margin="5 0" Text="{Binding DistanceUnit}"/>
                                            <Button Content="Apply" Width="60" Margin="11 0 0 0" IsEnabled="{Binding ApplyIsEnabled}" Command="{Binding FilterByDistanceCommand}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox  Padding="5" Grid.Column="1" Grid.Row="1" Margin="5 7">
                                    <!--<GroupBox  Padding="5" Grid.Column="1"  Grid.Row="1" Margin="5 7" IsEnabled="True">-->
                                    <GroupBox.Header>
                                        <CheckBox  IsChecked="{Binding FilterByRadialIsChecked}">Radial Operation</CheckBox>
                                    </GroupBox.Header>
                                    <!--<StackPanel Orientation="Vertical" Visibility="{Binding FilterByRadialIsVisible}">-->
                                    <StackPanel Orientation="Vertical" IsEnabled="{Binding FilterByRadialIsChecked}">
                                        <StackPanel Orientation="Horizontal" Margin="0 5" VerticalAlignment="Top">
                                            <RadioButton Content="Left Side" IsChecked="{Binding RadialLeftSideIsChecked}" GroupName="FilterByRadial"/>
                                            <RadioButton HorizontalAlignment="Right" Margin="40 0 0 0" IsChecked="{Binding RadialRightSideIsChecked}" GroupName="FilterByRadial" Content="Right Side"/>
                                        </StackPanel>

                                        <StackPanel  Orientation="Horizontal" Margin="0 5" VerticalAlignment="Top" >
                                            <TextBlock Text="Radial from Radar: "/>
                                            <TextBox  Text="{Binding FilterRadial,UpdateSourceTrigger=PropertyChanged}"  PreviewTextInput="TxtLatDeg_OnPreviewTextInput"/>
                                            <TextBlock  Margin="5 0" Text="°"/>
                                            <Button Content="Apply" Width="60" Margin="17 0 0 0" IsEnabled="{Binding ApplyIsEnabled}" Command="{Binding FilterByRadialCommand}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </GroupBox>

                                <!--<CheckBox Content="Draw Buffer" IsChecked="{Binding DrawBufferIsChecked}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Margin="10 2"/>-->
                            </Grid>
                        </Expander>
                    </StackPanel>

                    <StackPanel Grid.Row="3" Margin="5 15">
                        <StackPanel.Resources>
                            <Style x:Key="TestContentStyle" TargetType="Button">
                                <Setter Property="Content" Value="Test Button"/>
                                <Setter Property="MinWidth" Value="100"/>
                                <Setter Property="MinHeight" Value="100"/>
                            </Style>
                        </StackPanel.Resources>
                        <!--<Expander Template="{StaticResource StretchyExpanderTemp}"-->
                        <Expander Template="{StaticResource StretchyExpanderTemp}"
                              OverridesDefaultStyle="True"
                              Header="Sector List"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              >
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <DataGrid   ClipboardCopyMode="ExcludeHeader" VerticalScrollBarVisibility="Visible" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Extended"  
                                            ItemsSource="{Binding SectorList}" SelectedItem="{Binding SelectedSector}"
                            Background="#AECBCBCB" BorderBrush="Black" BorderThickness="0.6" Width="610"  Height="120" MinHeight="80" VerticalAlignment="Top" Margin="5">

                                    <DataGrid.ContextMenu>
                                        <ContextMenu >
                                            <MenuItem Header="Remove" Command="{Binding RemoveCommand}"  />
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Number"   Binding="{Binding Name}" Width="70"/>
                                        <DataGridTextColumn Header="Elevation"   Binding="{Binding Height,Converter={StaticResource HeightDisplayConverter}}" Width="110"/>
                                        <DataGridTextColumn Header="Buffer Value"  Binding="{Binding BufferValue,Converter={StaticResource DistanceDisplayConverter}}" Width="110"/>
                                        <DataGridTextColumn Header="MOC"  Binding="{Binding MOC,Converter={StaticResource HeightDisplayConverter}}" Width="90"/>
                                    </DataGrid.Columns>
                                    <DataGrid.CellStyle>
                                        <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Style.Triggers>
                                                <Trigger  Property="IsSelected" Value="true">
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                </DataGrid>
                            </ScrollViewer>
                        </Expander>
                    </StackPanel>

                    <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="5 10" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <Button  Width="110"  Height="25" Margin="10 0 0 0" Command="{Binding ApplyCommand}" IsEnabled="{Binding CreateSectorIsEnabled}" >
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/apply.gif" />
                                <TextBlock Margin="5 0 0 0">Create Sector</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button  Width="90"  Height="25" Margin="10 0 0 0" Command="{Binding ReportCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/documents.gif" />
                                <TextBlock Margin="5 0 0 0" >Report</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button  Width="80" Height="25" Margin="10 0 0 0" Command="{Binding UndoCommand}" IsEnabled="{Binding UndoIsEnabled}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/back_undo.png" />
                                <TextBlock Margin="5 0 0 0">Undo</TextBlock>
                            </StackPanel>
                        </Button>
                        <!--<Button  Width="80" Height="25" Margin="10 0 0 0" Command="{Binding RedoCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/redo_forward.png" />
                                <TextBlock Margin="5 0 0 0">Redo</TextBlock>
                            </StackPanel>
                        </Button>-->

                    </StackPanel>
                </Grid>
            </TabItem>

        </TabControl>
        <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="4 12 4 2">
            <Button  Width="80" Height="24" Command="{Binding BackCommand}" IsEnabled="{Binding BackCommandIsEnabled}">
                <StackPanel Orientation="Horizontal">
                    <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/Backward.gif" />
                    <TextBlock Margin="5 0 0 0">Back</TextBlock>
                </StackPanel>
            </Button>
            <Button  Width="80" Height="24" Margin="5 0 0 0" Command="{Binding NextCommand}" IsEnabled="{Binding NextCommandIsEnabled}">
                <StackPanel Orientation="Horizontal">
                    <Image Width="16" Height="16" 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Fill" Source="/Aran.Panda.RadarMA;component/image/Forward.gif" />
                    <TextBlock Margin="5 0 0 0" Text="{Binding NextButtonContent}"/>
                </StackPanel>
            </Button>

        </StackPanel>
        <StatusBar DockPanel.Dock="Bottom" Grid.Row="2" Margin="0 10 0 0">
            <StatusBarItem>
                <TextBlock  Text="{Binding StatusText}" FontStyle="Italic" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
