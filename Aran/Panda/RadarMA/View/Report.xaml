<Window x:Class="Aran.Panda.RadarMA.View.Report"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converter="clr-namespace:Aran.Panda.RadarMA.Converter"
             mc:Ignorable="d" 
            SizeToContent="WidthAndHeight"
            Title="Radar Minimum Altitude Report"
            Closing="Report_OnClosing"
             >
    <Window.Resources>
        <converter:HeightToDisplayConverter x:Key="HeightDisplayConverter" />
        <converter:DistanceDisplayConverter x:Key="DistanceDisplayConverter" />
    </Window.Resources>
    <Grid>
        <TabControl Margin="5">
            <TabItem Header="Sectors">
                <DataGrid   Name="PtGrid" ClipboardCopyMode="ExcludeHeader" AutoGenerateColumns="False"
                            IsReadOnly="True" SelectionMode="Single"  ItemsSource="{Binding SectorList}" SelectedItem="{Binding SelectedSector}"
                            Background="#AECBCBCB" BorderBrush="Black"  BorderThickness="0.6" 
                            Width="585"  Height="auto" MinHeight="240" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5">

                    <DataGrid.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Remove" Command="{Binding RemoveCommand}"  />
                            <MenuItem Header="Copy"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Number"   Binding="{Binding Number}" Width="70"/>
                        <DataGridTextColumn Header="Name"   Binding="{Binding Name}" Width="70"/>
                        <DataGridTextColumn Header="Elevation (FT)"   
                                            Binding="{Binding Height,Converter={StaticResource HeightDisplayConverter}}" Width="110"/>
                        <DataGridTextColumn Header="Buffer Value (KM)"  
                                            Binding="{Binding BufferValue,Converter={StaticResource DistanceDisplayConverter}}" Width="110"/>
                        <DataGridTextColumn Header="MOC (FT)"  Binding="{Binding MOC,Converter={StaticResource HeightDisplayConverter}}" Width="90"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="More" Command="{Binding ReportCommand}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridHyperlinkColumn Header="Obstacle Report" 
                                                 Binding="{Binding ReportCommand}"
                                                 ContentBinding="{Binding HeaderName}"/>-->
                    </DataGrid.Columns>
                    <DataGrid.CellStyle>
                        <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger  Property="IsSelected" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                </DataGrid>
            </TabItem>
            <TabItem Header="Closest Sectors" Visibility="Collapsed"></TabItem>
            <TabItem Header="Unassigned Sectors" Visibility="Visible">
                <DataGrid  ClipboardCopyMode="ExcludeHeader" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single"  ItemsSource="{Binding UnAssignedSectorList}" SelectedItem="{Binding SelectedUnAssignedSector}"
                            Background="#AECBCBCB" BorderBrush="Black" BorderThickness="0.6" Width="465"  Height="auto" MinHeight="240" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5">

                    <DataGrid.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Create" Command="{Binding CreateUnassignedCommand}"  />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id"   Binding="{Binding Number}" Width="70"/>
                        <DataGridTextColumn Header="Name"   Binding="{Binding Name}" Width="70"/>
                        <DataGridTextColumn Header="Elevation (FT)" 
                                            Binding="{Binding Height,Converter={StaticResource HeightDisplayConverter}}" Width="110"/>
                    </DataGrid.Columns>
                    <DataGrid.CellStyle>
                        <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger  Property="IsSelected" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                </DataGrid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
