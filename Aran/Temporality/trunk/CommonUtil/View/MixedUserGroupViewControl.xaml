<UserControl x:Class="Aran.Temporality.CommonUtil.View.MixedUserGroupViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             UseLayoutRounding="True" 
             d:DesignHeight="296" 
             d:DesignWidth="454">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/DataGrid.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/TreeView.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/VectorImages.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/ToolTip.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/ToolBar.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/Buttons.xaml"/>

                <!--<ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Dictionary/ComboBox.xaml"/>-->

                <ResourceDictionary Source="pack://application:,,,/Aran.Temporality.Resources;component/Resources/Dictionary/Images.xaml"/>


            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>


    </UserControl.Resources>
    <!--<UserControl.DataContext>
        <ViewModel:EasyUserViewModel/>
    </UserControl.DataContext>-->


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="Name:" VerticalAlignment="Center" Margin="5" />
            <TextBox Grid.Column="1" 
                     IsReadOnly="{Binding Path=IsNotEnabled}"
                     Margin="0,5,0,5" 
                     VerticalAlignment="Center"
                     MinWidth="100" 
                     Text="{Binding Path=CurrentUserName, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Grid.Column="0" Grid.Row="1" Text="Group:" VerticalAlignment="Center" Margin="5" />
            <TextBox Grid.Column="1" Grid.Row="1"
                     IsReadOnly="{Binding Path=IsNotEnabled}"
                     Margin="0,5,0,5" 
                     VerticalAlignment="Center"
                     MinWidth="100" 
                     Text="{Binding Path=CurrentGroupName, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Grid.Column="0" Grid.Row="2" Text="Roles:" VerticalAlignment="Top" Margin="5" />

            <Border Grid.Column="1" Grid.Row="2" BorderThickness="1" BorderBrush="#FF688CAF" Background="White" Margin="0,0,0,5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" 
                              IsHitTestVisible="{Binding Path=IsEnabled}"
                              Style="{StaticResource HiddenWhenDisabledCheckBox}"
                              IsChecked="{Binding Path=IsSuperAdmin}"  
                              Content="Can manage users, their roles and access rights" 
                              Margin="5"/>
                    <CheckBox Grid.Row="1" 
                              IsHitTestVisible="{Binding Path=IsEnabled}"
                              Visibility="{Binding Path=IsObserverVisible, FallbackValue=Hidden}"
                              IsChecked="{Binding Path=IsObserver}"  
                              IsEnabled="{Binding Path=IsObserverEnabled}"
                              Content="Has read only access to any data" 
                              Margin="5"/>
                    <CheckBox Grid.Row="2" 
                              IsHitTestVisible="{Binding Path=IsEnabled}"
                              Style="{StaticResource HiddenWhenDisabledCheckBox}"
                              IsChecked="{Binding Path=IsTester}"  
                              Content="Has full access to any data" 
                              Margin="5"/>
                </Grid>
            </Border>


            <TextBlock Grid.Column="0" Grid.Row="3" Text="Modules:" VerticalAlignment="Top" Margin="5" />
            <DataGrid Grid.Column="1" Grid.Row="3"
                     
                      IsHitTestVisible="{Binding Path=IsEnabled}"
                      IsReadOnly="True"
                      HeadersVisibility="None"
                      ItemsSource="{Binding Path=Modules}" 
                      AutoGenerateColumns="False" 
                      Background="White"
                      VerticalGridLinesBrush="Transparent"
                      HorizontalGridLinesBrush="Transparent">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Foreground" Value="Black" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Content="{Binding Path=ModuleName}"
                                          Margin="4"
                                          
                                          IsChecked="{Binding Path=IsAllowed, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Border Grid.Column="1" 
                Width="1" 
                Margin="10,0,10,0" 
                VerticalAlignment="Stretch" 
                HorizontalAlignment="Center">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FF688CAF" Offset="0.0"/>
                            <GradientStop Color="#FF688CAF" Offset="0.5"/>
                            <GradientStop Color="#FF688CAF" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.Background>
        </Border>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <WrapPanel Grid.Row="0" >

                <TextBlock Text="Feature Access:" VerticalAlignment="Center" Margin="0,5,5,5" />

                <ToggleButton Template="{StaticResource MyToggleButton}" Width="90" Margin="2,2,2,0" IsChecked="{Binding Path=IsNoAccessChecked}" Command="{Binding Path=FilterChanged}">
                    <WrapPanel>
                        <TextBlock Text="{Binding Path=NoAccessCount, FallbackValue=0}"/>
                        <TextBlock Text=" No access"/>
                    </WrapPanel>
                </ToggleButton>
                <ToggleButton Template="{StaticResource MyToggleButton}" Width="90" Margin="0,2,2,0" IsChecked="{Binding Path=IsReadOnlyChecked}" Command="{Binding Path=FilterChanged}">
                    <WrapPanel>
                        <TextBlock Text="{Binding Path=ReadOnlyCount, FallbackValue=0}"/>
                        <TextBlock Text=" Read-only"/>
                    </WrapPanel>
                </ToggleButton>
                <ToggleButton Template="{StaticResource MyToggleButton}" Width="90" Margin="0,2,2,0" IsChecked="{Binding Path=IsReadWriteChecked}" Command="{Binding Path=FilterChanged}">
                    <WrapPanel>
                        <TextBlock Text="{Binding Path=ReadWriteCount, FallbackValue=0}"/>
                        <TextBlock Text=" Read-write"/>
                    </WrapPanel>
                </ToggleButton>
            </WrapPanel>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Text="{Binding Path=FeatureFilter, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Command="{Binding OnClearFeatureFilter}" 
                        Grid.Column="1" 
                        Width="25" 
                        Height="22"
                        Visibility="{Binding Path=FeatureFilterEmptyButtonVisibility, FallbackValue=Collapsed}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
                        Focusable="False">
                    <Image Source="{StaticResource DeleteBitmapImage}" Width="16" Height="16"/>
                </Button>
            </Grid>

            <DataGrid Grid.Row="2" 
                          HeadersVisibility="Column"
                          ItemsSource="{Binding Path=CurrentFilteredFeatureList}" 
                          Name="FilteredFeatureList"
                          AutoGenerateColumns="False" 
                          IsReadOnly="True"
                          
                          AlternatingRowBackground="WhiteSmoke"
                      
                          Background="WhiteSmoke"
                          VerticalGridLinesBrush="Lavender"
                          HorizontalGridLinesBrush="Lavender"
                      
                          CanUserReorderColumns="False" 
                          CanUserResizeRows="False"
                          CanUserSortColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Feature" Binding="{Binding Path=Feature}" Width="*" IsReadOnly="True"/>

                    <DataGridTemplateColumn Header="Read" Width="43">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox HorizontalAlignment="Center" 
                                              IsHitTestVisible="{Binding Path=IsEnabled}"
                                              IsChecked="{Binding IsRead, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Write" Width="43">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox HorizontalAlignment="Center" 
                                              IsHitTestVisible="{Binding Path=IsEnabled}"
                                              IsChecked="{Binding IsWrite, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>

        </Grid>

    </Grid>

</UserControl>
