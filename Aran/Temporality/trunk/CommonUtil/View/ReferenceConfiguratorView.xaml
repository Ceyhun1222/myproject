<UserControl x:Class="Aran.Temporality.CommonUtil.View.ReferenceConfiguratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Control1="clr-namespace:Aran.Temporality.CommonUtil.Control"
             xmlns:View1="clr-namespace:Aran.Temporality.CommonUtil.View"
             xmlns:Util="clr-namespace:Aran.Temporality.CommonUtil.Util"
             xmlns:Extender="clr-namespace:Aran.Temporality.CommonUtil.Extender" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
   



    <Grid>

        <Grid Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <DockPanel Grid.Row="0">
                <ToolBarTray DockPanel.Dock="Top">
                    <Control1:ExtendedToolBar Band="0">
                        <Label Content="Operations:" VerticalAlignment="Center" ToolBar.OverflowMode="Never"/>

                        <Button ToolBar.OverflowMode="Never"
                                Visibility="{Binding EditChangesVisibility}"
                                ToolTip="Edit dependency configuration" 
                                VerticalAlignment="Center"
                                Command="{Binding Path=EditCommand}">
                            <Image Source="{StaticResource EditBitmapImage}" Width="16" Height="16" />
                        </Button>
                        
                      

                        <Button ToolBar.OverflowMode="Never"
                                Visibility="{Binding SaveChangesVisibility}"
                                ToolTip="Cancel changes" 
                                VerticalAlignment="Center"
                                Command="{Binding Path=CancelCommand}">
                            <Image Source="{StaticResource CancelBitmapImage}" Width="16" Height="16" />
                        </Button>
                        
                        <Separator/>

                        <Button ToolBar.OverflowMode="Never"
                                ToolTip="Open dependency configuration from file" 
                                VerticalAlignment="Center"
                                Command="{Binding Path=OpenFromFileCommand}">
                            <Image Source="{StaticResource FolderBitmapImage}" Width="16" Height="16" />
                        </Button>

                        <Button ToolBar.OverflowMode="Never"
                                ToolTip="Save dependency configuration to file" 
                                VerticalAlignment="Center"
                                Command="{Binding Path=SaveToFileCommand}">
                            <Image Source="{StaticResource SaveBitmapImage}" Width="16" Height="16" />
                        </Button>

                    </Control1:ExtendedToolBar>

                    <Control1:ExtendedToolBar Band="0" Extender:ToolBarExtender.PreventOverflow="True" Visibility="{Binding SaveChangesVisibility}">
                        <Label Content="Root feature type:" VerticalAlignment="Center"/>

                        <ComboBox Grid.Column="0" 
                            MinWidth="200" 
                                  Focusable="True"
                                  StaysOpenOnEdit="True"
                                  Text="{Binding Path=FeatureTypeFilter, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  IsTextSearchEnabled="False"
                            VerticalAlignment="Center"
                            IsEditable="True" 
                                  DropDownClosed="ComboBox_OnDropDownClosed"
                            Style="{StaticResource ToolBarComboboxStyle}"
                            SelectedItem="{Binding Path=FeatureType, UpdateSourceTrigger=PropertyChanged}" 
                            ItemsSource="{Binding Path=FeatureListFiltered}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>

                    </Control1:ExtendedToolBar>
                </ToolBarTray>
            </DockPanel>


            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TreeView Grid.Column="0" ItemsSource="{Binding FirstGeneration}" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      BorderThickness="1,1,0,1"
                      AllowDrop="True"
                      Background="WhiteSmoke">

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">

                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="Padding" Value="1,0,0,0" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19" Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                                            <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Grid.Row="1" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed" />
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility"
                                    TargetName="Expander"
                                    Value="Hidden" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="IsSelectionActive" Value="false" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                <Image Source="{Binding IconSource}" Width="16" Height="16" VerticalAlignment="Center"/>

                                <CheckBox IsChecked="{Binding IsChecked}"
                                          Visibility="{Binding EditControlVisibility}"
                                       AllowDrop="False"
                                       VerticalAlignment="Center" 
                                       Margin="1,1,0,1" />

                                <TextBlock Text="{Binding Name}" 
                                           Visibility="{Binding NormalVisibility}"
                                           AllowDrop="False"
                                           VerticalAlignment="Center" 
                                           Margin="3,2,3,3" />

                                <TextBlock Text="{Binding Name}" 
                                           Visibility="{Binding StrikedVisibility}"
                                           AllowDrop="False"
                                           VerticalAlignment="Center" 
                                           Margin="3,2,3,3" >
                                    <TextBlock.TextDecorations>
                                    <TextDecoration Location="Strikethrough"  PenThicknessUnit="FontRecommended">
                                        <TextDecoration.Pen>
                                            <Pen Brush="Red" Thickness="2"/>
                                        </TextDecoration.Pen>
                                    </TextDecoration>
                                </TextBlock.TextDecorations>
                                </TextBlock>

                                
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Row="0"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding Path=Links}" 
                      SelectedItem="{Binding Path=SelectedLink, UpdateSourceTrigger=PropertyChanged}"
                      IsReadOnly="True" 
                      CanUserSortColumns="True"
                      Background="WhiteSmoke"
                        
                      VerticalGridLinesBrush="Lavender"
                      HorizontalGridLinesBrush="Lavender"
                      
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      VirtualizingStackPanel.IsVirtualizing="True"
                        
                      ScrollViewer.IsDeferredScrollingEnabled="True"
                        
                      EnableRowVirtualization="True"
                      EnableColumnVirtualization="False"
                          
                      HeadersVisibility="Column"
                      Name="PresenterDataGrid"
                      AlternatingRowBackground="WhiteSmoke"
                      RowStyle="{StaticResource AllwaysSelectedDataGrid}">

                        <DataGrid.Resources>
                            <Util:DataContextSpy x:Key="spy" DataContext="{Binding LinkHeader}" />
                        </DataGrid.Resources>

                        <DataGrid.Columns>

                            <DataGridTemplateColumn Header="{Binding Source={StaticResource spy}, Path=DataContext, FallbackValue=Property}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" Margin="5,0,5,0" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Header="Mandatory" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsEnabled="{Binding EditingEnabled, UpdateSourceTrigger=PropertyChanged}" 
                                              IsChecked="{Binding IsError, UpdateSourceTrigger=PropertyChanged}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Optional" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsEnabled="{Binding EditingEnabled, UpdateSourceTrigger=PropertyChanged}" 
                                              IsChecked="{Binding IsWarning, UpdateSourceTrigger=PropertyChanged}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>



                        </DataGrid.Columns>


                    </DataGrid>

                    <DataGrid Grid.Row="1"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding Path=Properties}" 
                      SelectedItem="{Binding Path=SelectedProperty, UpdateSourceTrigger=PropertyChanged}"
                      IsReadOnly="True" 
                      CanUserSortColumns="True"
                      Background="WhiteSmoke"
                        
                      VerticalGridLinesBrush="Lavender"
                      HorizontalGridLinesBrush="Lavender"
                      
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      VirtualizingStackPanel.IsVirtualizing="True"
                        
                      ScrollViewer.IsDeferredScrollingEnabled="True"
                        
                      EnableRowVirtualization="True"
                      EnableColumnVirtualization="False"
                          
                      HeadersVisibility="Column"
                      Name="PresenterDataGrid2"
                      AlternatingRowBackground="WhiteSmoke"
                      RowStyle="{StaticResource AllwaysSelectedDataGrid}">

                        <DataGrid.Resources>
                            <Util:DataContextSpy x:Key="spy2" DataContext="{Binding PropertyHeader}" />
                        </DataGrid.Resources>

                        <DataGrid.Columns>

                            <DataGridTemplateColumn Header="{Binding Source={StaticResource spy2}, Path=DataContext, FallbackValue=Property}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,5,0">
                                            <TextBlock Text="{Binding ParentName}"  VerticalAlignment="Center" Foreground="LightGray"/>
                                            <TextBlock Text="{Binding ChildName}" VerticalAlignment="Center" Foreground="Black"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Header="Mandatory" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsEnabled="{Binding EditingEnabled, UpdateSourceTrigger=PropertyChanged}" 
                                              IsChecked="{Binding IsError, UpdateSourceTrigger=PropertyChanged}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Optional" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsEnabled="{Binding EditingEnabled, UpdateSourceTrigger=PropertyChanged}" 
                                              IsChecked="{Binding IsWarning, UpdateSourceTrigger=PropertyChanged}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>



                        </DataGrid.Columns>


                    </DataGrid>
                </Grid>
              
            </Grid>

        </Grid>

        <View1:BlockerControl 
            DataContext="{Binding Path=BlockerModel}" 
            Grid.Row="0" Grid.Column="0" 
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Stretch"/>
    </Grid>

</UserControl>
