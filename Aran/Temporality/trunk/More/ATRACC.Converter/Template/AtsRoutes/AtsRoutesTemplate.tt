<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#--------------------------------------------------------------------
#
#   Ats Routes
#   ----------
#
#--------------------------------------------------------------------
#
#   Format :
#
#   AtsRoute <ATS route name>
#   RelatedGeographicalPoints <geographical Point 0.0[/<Connected \
#   aerodrome 0>[/<Connected aerodrome 1>...[/<Connected aerodrome \
#   n>]]]> [<geographical Point 0.1[/<Connected aerodrome \
#   0>[/<Connected aerodrome 1>...[/<Connected aerodrome n>]]]>   \
#                                     .
#                                     .
#                                     .
#   [<geographical Point 0.q[/<Connected aerodrome 0>[/<Connected \
#   aerodrome 1>...[/<Connected aerodrome n>]]]>]]
#                                     .
#                                     .
#                                     .
#   RelatedGeographicalPoints <geographical Point p.0[/<Connected \
#   aerodrome 0>[/<Connected aerodrome 1>...[/<Connected aerodrome \
#   n>]]]> [<geographical Point p.1[/<Connected aerodrome \
#   0>[/<Connected aerodrome 1>...[/<Connected aerodrome n>]]]>   \
#                                     .
#                                     .
#                                     .
#   [<geographical Point p.q[/<Connected aerodrome 0>[/<Connected \
#   aerodrome 1>...[/<Connected aerodrome n>]]]>]] \
#   StartPointRelatedAerodromes <aerodrome 0.0> [<aerodrome 0.1> \
#   ...[<aerodrome 0.n>]] \
#                                     .
#                                     .
#                                     .
#   StartPointRelatedAerodromes <aerodrome p.0> [<aerodrome p.1> \
#   ...[<aerodrome p.n>]] \
#   EndPointRelatedAerodromes <aerodrome 0.0> [<aerodrome 0.1> \
#   ...[<aerodrome 0.n>]] \
#                                     .
#                                     .
#                                     .
#   EndPointRelatedAerodromes <aerodrome p.0> [<aerodrome p.1> \
#   ...[<aerodrome p.n>]]
#
#--------------------------------------------------------------------

<# 
if (Routes!=null)
{
	foreach(var route in Routes)
	{
	#>
AtsRoute    <#= route.Name #>

    RelatedGeographicalPoints       <# if (route.PointList==null||route.PointList.Count==0) 
										{
										#>MISSING
										<#
										}
										else
										{
											int i=0;
											int last=0;
											int step=Math.Max(10, route.PointList.Max(t2 => t2.Length));

											foreach(var point in route.PointList)
											{
												i++;
												if (i==1)
												{
												#><#= point #><#
												}
												else
												{
												for(int j=0;j<step-last;j++)
												{
												#> <#
												}
												#> \
                                    <#= point #><#
												}
												last=point.Length;
											}	
										}
	#>  
	
    StartPointRelatedAerodromes     <#= route.Start #>
                                    
    EndPointRelatedAerodromes       <#= route.End #>

<#
	}
}
#>
