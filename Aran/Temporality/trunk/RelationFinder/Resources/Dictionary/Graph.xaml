<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Graph="clr-namespace:ADM.Graph"
                    xmlns:Controls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
                    xmlns:WPFExtensions_AttachedBehaviours="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
                    xmlns:Converters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
                    xmlns:Controls1="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
                    xmlns:Converters1="clr-namespace:WPFExtensions.Converters;assembly=WPFExtensions">

    <Converters1:DoubleToLog10Converter x:Key="log10Converter" />

    <Converters1:EqualityToBooleanConverter x:Key="equalityConverter"/>
    
    <Style TargetType="{x:Type Controls1:ZoomControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls1:ZoomControl}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"                                
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="WhiteSmoke"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <Controls1:ZoomContentPresenter x:Name="PART_Presenter" ClipToBounds="False" />
                        </Border>
                        <Canvas>

                            <!-- Controls -->
                            <Border Padding="10,10,5,5"
                                    CornerRadius="0,0,5,0"
                                    Background="Lavender"
                                    BorderBrush="DarkSlateBlue"
                                    BorderThickness="0,0,1,1"
                                    Canvas.Left="-5"
                                    Canvas.Top="-5"
                                    ToolTipService.InitialShowDelay="0">
                                <Border.Effect>
                                    <DropShadowEffect 
                                    BlurRadius="2" 
                                    Color="Gray" 
                                    ShadowDepth="1"
                                    RenderingBias="Quality"
                                    Opacity="0.5" 
                                    Direction="315"/>
                                </Border.Effect>
                                <Border.ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock><Run FontWeight="Bold">CTRL + Wheel:</Run> Zoom In / Out</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">ALT + Drag:</Run> ZoomBox</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">(SHIFT +) Drag:</Run> Pan</TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                                        <Border x:Name="border"
                                                                BorderBrush="DarkSlateBlue"
                                                                Background="Lavender"
                                                                BorderThickness="1"
                                                                CornerRadius="5"
                                                                Width="40"
                                                                Height="40"
                                                                Margin="2"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center" />
                                                        </Border>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver"
                                                                     Value="True">
                                                                <Setter TargetName="border"
                                                                        Property="Background"
                                                                        Value="WhiteSmoke" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked"
                                                                     Value="True">
                                                                <Setter TargetName="border"
                                                                        Property="Background"
                                                                        Value="LightSteelBlue" />
                                                                <Setter TargetName="border"
                                                                        Property="TextBlock.FontWeight"
                                                                        Value="Bold" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </StackPanel.Resources> 
                                    <Slider Height="150"
                                            Minimum="{TemplateBinding MinZoom,Converter={StaticResource log10Converter}}"
                                            Maximum="{TemplateBinding MaxZoom,Converter={StaticResource log10Converter}}"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,Mode=TwoWay,Converter={StaticResource log10Converter}}"
                                            HorizontalAlignment="Center"
                                            Ticks="-1, -0.25, -0.5, -0.75, 0, 0.25, 0.5, 0.75, 1"
                                            AutoToolTipPlacement="None"
                                            AutoToolTipPrecision="1"
                                            TickPlacement="BottomRight"
                                            TickFrequency="1"
                                            LargeChange="0.25"
                                            SmallChange="0.025"
                                            Orientation="Vertical" />
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='{}{0:F2}x'}"
                                               HorizontalAlignment="Center"
                                               FontWeight="Bold" />
                                    <RadioButton Content="1:1"
                                                 GroupName="rbgZoomMode"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource equalityConverter},ConverterParameter={x:Static Controls1:ZoomControlModes.Original}}" />
                                    <RadioButton Content="Fill"
                                                 GroupName="rbgZoomMode"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource equalityConverter},ConverterParameter={x:Static Controls1:ZoomControlModes.Fill}}" />
                                </StackPanel>
                            </Border>

                            <!-- ZoomBox -->
                            <Border BorderBrush="{TemplateBinding ZoomBoxBorderBrush}"
                                    BorderThickness="{TemplateBinding ZoomBoxBorderThickness}"
                                    Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.X}"
                                    Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Y}"
                                    Opacity="{TemplateBinding ZoomBoxOpacity}"
                                    Background="{TemplateBinding ZoomBoxBackground}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Width}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Height}" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White" />
        <Setter Property="ZoomBoxBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.0, 0.0" EndPoint="1.0, 1.0">
                    <GradientStop Color="Silver" Offset="0.0" />
                    <GradientStop Color="DarkGray" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ZoomBoxBorderBrush" Value="Black" />
        <Setter Property="ZoomBoxBorderThickness" Value="1" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <Trigger Property="ModifierMode" Value="Pan">
                <Setter Property="Cursor" Value="SizeAll" />
            </Trigger>
            <Trigger Property="ModifierMode" Value="ZoomBox">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>






    <SolidColorBrush x:Key="HighlightedVertexBorderBrush" Color="DarkSlateBlue" />
    <SolidColorBrush x:Key="HighlightedVertexBackgroundBrush" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
    <SolidColorBrush x:Key="HighlightedVertexForegroundBrush" Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />

    <SolidColorBrush x:Key="SemiHighlightedSourceVertexBorderBrush" Color="DarkSlateBlue" />
    <SolidColorBrush x:Key="SemiHighlightedSourceVertexBackgroundBrush" Color="#FF1DBA00" />

    <SolidColorBrush x:Key="SemiHighlightedTargetVertexBorderBrush" Color="DarkSlateBlue" />
    <SolidColorBrush x:Key="SemiHighlightedTargetVertexBackgroundBrush" Color="#FFD6A51C" />

    <SolidColorBrush x:Key="SemiHighlightedInEdgeBrush" Color="#FF1DBA00" />
    <SolidColorBrush x:Key="SemiHighlightedOutEdgeBrush" Color="#FFD6A51C" />
    <SolidColorBrush x:Key="HighlightedEdgeBrush" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
    
    <DataTemplate DataType="{x:Type Graph:PocVertex}">
        <TextBlock Text="{Binding Path=ID, Mode=OneWay, FallbackValue=VertexId}" />
    </DataTemplate>


    <!-- VERTEX CONTROL -->
    <Style TargetType="{x:Type Controls:VertexControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:VertexControl}">
                    <Border Background="{TemplateBinding Background}" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="5"
							Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Vertex}"/>
                        <Border.Effect>
                        <DropShadowEffect 
                                    BlurRadius="2" 
                                    Color="Gray" 
                                    ShadowDepth="3"
                                    RenderingBias="Quality"
                                    Opacity="0.5" 
                                    Direction="315"/>
                         </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Controls:GraphElementBehaviour.HighlightTrigger" Value="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="WPFExtensions_AttachedBehaviours:DragBehaviour.IsDragEnabled" Value="True"/>
        <Setter Property="WPFExtensions_AttachedBehaviours:DragBehaviour.X" Value="{Binding Path=(Controls:GraphCanvas.X), Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="WPFExtensions_AttachedBehaviours:DragBehaviour.Y" Value="{Binding Path=(Controls:GraphCanvas.Y), Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Background" Value="Lavender"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderBrush" Value="DarkSlateBlue"/>
        <Style.Triggers>
            <Trigger Property="Controls:GraphElementBehaviour.IsHighlighted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightedVertexBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource HighlightedVertexBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightedVertexForegroundBrush}"/>
            </Trigger>
            <Trigger Property="Controls:GraphElementBehaviour.IsSemiHighlighted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightedVertexBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource HighlightedVertexBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightedVertexForegroundBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Controls:GraphElementBehaviour.IsSemiHighlighted" Value="True"/>
                    <Condition Property="Controls:GraphElementBehaviour.SemiHighlightInfo" Value="Source"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource SemiHighlightedSourceVertexBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource SemiHighlightedSourceVertexBackgroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Controls:GraphElementBehaviour.IsSemiHighlighted" Value="True"/>
                    <Condition Property="Controls:GraphElementBehaviour.SemiHighlightInfo" Value="Target"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource SemiHighlightedTargetVertexBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource SemiHighlightedTargetVertexBackgroundBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />


    <!-- EDGE CONTROL -->
    <Style TargetType="{x:Type Controls:EdgeControl}">
        <Style.Resources>
            <ToolTip x:Key="ToolTipContent">
                <StackPanel>
                    <TextBlock FontWeight="Bold" Text="Edge Information"/>
                    <TextBlock Text="{Binding ID}"/>
                    <ListBox ItemsSource="{Binding ConnectionList}" Background="Transparent" BorderBrush="Transparent">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <BulletDecorator VerticalAlignment="Center">
                                    <BulletDecorator.Bullet>
                                        <Ellipse Fill="DarkSlateBlue" Width="6" Height="6" VerticalAlignment="Center"/>
                                    </BulletDecorator.Bullet>
                                    <TextBlock Foreground="DarkSlateBlue" Text="{Binding}" Margin="5,0,0,0" VerticalAlignment="Center"/>
                                </BulletDecorator>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </ToolTip>
        </Style.Resources>
        <Setter Property="ToolTip" Value="{StaticResource ToolTipContent}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:EdgeControl}">
                    <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2"
                          SnapsToDevicePixels="True"
                          MinWidth="1"
                          MinHeight="1"
                          x:Name="edgePath">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.(Controls:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.(Controls:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.(Controls:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.(Controls:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="RoutePoints" />
                                    </MultiBinding>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Controls:GraphElementBehaviour.HighlightTrigger" 
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="Silver" />
        <Setter Property="Opacity" Value="0.5" />
        
        <Style.Triggers>
            <Trigger Property="Controls:GraphElementBehaviour.IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightedEdgeBrush}" />
            </Trigger>
            <Trigger Property="Controls:GraphElementBehaviour.IsSemiHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightedEdgeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Controls:GraphElementBehaviour.IsSemiHighlighted" Value="True" />
                    <Condition Property="Controls:GraphElementBehaviour.SemiHighlightInfo" Value="InEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SemiHighlightedInEdgeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Controls:GraphElementBehaviour.IsSemiHighlighted" Value="True" />
                    <Condition Property="Controls:GraphElementBehaviour.SemiHighlightInfo" Value="OutEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SemiHighlightedOutEdgeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>