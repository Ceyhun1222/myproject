<UserControl x:Class="TOSSM.View.Tool.ExportView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:View1="clr-namespace:Aran.Temporality.CommonUtil.View;assembly=Aran.Temporality.CommonUtil"
             xmlns:Control1="clr-namespace:Aran.Temporality.CommonUtil.Control;assembly=Aran.Temporality.CommonUtil"
             xmlns:Extender1="clr-namespace:Aran.Temporality.CommonUtil.Extender;assembly=Aran.Temporality.CommonUtil"
             xmlns:Converter="clr-namespace:TOSSM.Converter"
             xmlns:Menu="clr-namespace:TOSSM.ViewModel.Control.PropertySelector.Menu"
             xmlns:xmlViewer="clr-namespace:TOSSM.ViewModel.Control.XmlViewer"
             xmlns:Enum="clr-namespace:TOSSM.ViewModel.Enums"
             xmlns:Model="clr-namespace:Aran.Temporality.Common.Enum;assembly=Aran.Temporality"
             xmlns:extension="clr-namespace:TOSSM.Extensions"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="1000">

    <UserControl.Resources>

        <Geometry x:Key="DownArrow">M0,0 L1,0 0.5,1Z</Geometry>

        <Style TargetType="{x:Type MenuItem}">
            <Style.Triggers>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource LeafMenuWrapperItemTemplate}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{StaticResource NodeMenuWrapperItemTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyMenu" TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderThickness="1" Background="WhiteSmoke">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <StackPanel ClipToBounds="True" Height="20" Orientation="Horizontal" IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type Menu:MenuItemViewModel}" 
                                  ItemsSource="{Binding Path=ItemsSource}">
            <Control1:MenuItemWrapper Header="{Binding Path=Header}" 
                                      IsCheckable="{Binding Path=IsCheckable}"
                                      StaysOpenOnClick="{Binding Path=StaysOpenOnClick}"
                                      IsChecked="{Binding Path=IsChecked}" />
        </HierarchicalDataTemplate>
        <Converter:ReverseEnumConverter x:Key="ReverseEnumConverter" />
        <Converter:EnumConverter x:Key="EnumConverter" />
    </UserControl.Resources>

    <Grid>
        <Extender1:BindingExtender Source="{Binding ElementName=AiracSelector, Path=DataContext.SelectedDate}" 
                    Target="{Binding Path=AiracDate}"/>

        <!--<Grid Height="30" VerticalAlignment="Top" HorizontalAlignment="Stretch">
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="SteelBlue" />
                            <GradientStop Color="#FF293955" Offset="1" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Grid.Background>
        </Grid>-->


        <Grid>


            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>


                <DockPanel Grid.Row="0">
                    <ToolBarTray DockPanel.Dock="Top">


                        <Control1:ExtendedToolBar Visibility="{Binding Path=AiracControlVisibility}" Band="0" BandIndex="1" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="AIRAC Cycle:" VerticalAlignment="Center"/>
                            <View1:AiracSelector x:Name="AiracSelector" VerticalAlignment="Center"/>
                        </Control1:ExtendedToolBar>
                        <Control1:ExtendedToolBar Visibility="{Binding Path=CustomRangeVisibility}" Band="0" BandIndex="1" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Date Range:" VerticalAlignment="Center"/>
                            <xctk:DateTimePicker 
                                Margin="5,0,0,0"
                                Background="WhiteSmoke"
                                VerticalAlignment="Center" 
                                Value="{Binding Path=RangeStartDate, UpdateSourceTrigger=PropertyChanged}" 
                                AutoCloseCalendar="False"
                                Format="Custom"
                                AllowSpin="True"
                                FormatString="yyyy/MM/dd HH:mm UTC"
                                TimeFormat="Custom"
                                TimeFormatString="HH:mm"/>
                            <xctk:DateTimePicker 
                                Margin="5,0,0,0"
                                Background="WhiteSmoke"
                                VerticalAlignment="Center" 
                                Value="{Binding Path=RangeEndDate, UpdateSourceTrigger=PropertyChanged}" 
                                AutoCloseCalendar="False"
                                Format="Custom"
                                AllowSpin="True"
                                FormatString="yyyy/MM/dd HH:mm UTC"
                                TimeFormat="Custom"
                                TimeFormatString="HH:mm"/>

                        </Control1:ExtendedToolBar>
                        <Control1:ExtendedToolBar Visibility="{Binding Path=InterpretationVisibility}" Band="1" BandIndex="0" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Interpretation:" VerticalAlignment="Center"/>
                            <ComboBox MinWidth="150" VerticalAlignment="Center" ItemsSource="{Binding Source={extension:Enumeration {x:Type Enum:StatesEnum}}}" 
                                      DisplayMemberPath="Description"  SelectedValue="{Binding Path=StateType}" SelectedValuePath="Value">

                            </ComboBox>

                        </Control1:ExtendedToolBar>

                        <Control1:ExtendedToolBar Visibility="{Binding Path=EventTypeVisibility}" Band="1" BandIndex="0" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Events type:" VerticalAlignment="Center"/>
                            <ComboBox MinWidth="150" VerticalAlignment="Center" ItemsSource="{Binding Source={extension:Enumeration {x:Type Enum:EventsEnum}}}" 
                                      DisplayMemberPath="Description"  SelectedValue="{Binding Path=EventType}" SelectedValuePath="Value">
                            </ComboBox>

                        </Control1:ExtendedToolBar>

                        <Control1:ExtendedToolBar Band="0" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Export Features:" VerticalAlignment="Center" ToolBar.OverflowMode="Never"/>
                            <ComboBox MinWidth="150" VerticalAlignment="Center"  SelectedIndex="{Binding Path=ExportFeaturesIndex, FallbackValue=2,
                                Converter={StaticResource ReverseEnumConverter}, ConverterParameter={x:Type Enum:ExportEnum}}">
                                <ComboBoxItem Content="All Features"/>
                                <ComboBoxItem Content="EAD export"/>
                                <ComboBoxItem Content="Selected Features"/>
                                <ComboBoxItem Content="Selected With References"/>
                                <ComboBoxItem Content="All States In Range"/>
                                <ComboBoxItem Content="States of Selected In Range"/>
                                <ComboBoxItem Content="All Events In Range"/>
                                <ComboBoxItem Content="Events of Selected In Range"/>
                                <ComboBoxItem Content="Obstacle DataSet"/>
                            </ComboBox>

                            <Button ToolTip="Export to AIXM 5.1 File"  
                                    ToolBar.OverflowMode="Never"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=SaveCommand}">
                                <Image Source="{StaticResource SaveBitmapImage}" Width="16" Height="16" />
                            </Button>

                            <Button ToolTip="Open AIXM 5.1 File"  
                                    ToolBar.OverflowMode="Never"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=OpenSourceCommand}">
                                <Image Source="{StaticResource FolderBitmapImage}" Width="16" Height="16" />
                            </Button>

                            <Button ToolTip="Create common baseline"  
                                    ToolBar.OverflowMode="Never"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=CreateBaselineCommand}">
                                <!--<Image Source="{StaticResource FolderBitmapImage}" Width="16" Height="16" />-->
                                <TextBlock>Baseline</TextBlock>
                            </Button>

                            <Button ToolTip="Clear Feature List"  
                                    ToolBar.OverflowMode="Never"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=ClearCommand}">
                                <Image Source="{StaticResource TrashCanBitmapImage}" Width="16" Height="16" />
                            </Button>


                        </Control1:ExtendedToolBar>




                        <Control1:ExtendedToolBar Band="0" BandIndex="2" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Columns:" VerticalAlignment="Center"/>
                            <Menu Style="{StaticResource MyMenu}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                <Control1:MenuItemWrapper ItemsSource="{Binding Path=DataPresenter.MenuItemList}">
                                    <Control1:MenuItemWrapper.Header>

                                        <StackPanel Orientation="Horizontal">

                                            <TextBlock Text="{Binding Path=DataPresenter.SelectedColumnSetName}" VerticalAlignment="Center"/>

                                            <Path Data="{StaticResource DownArrow}"
                                                  Stretch="Fill"
                                                  Width="5"
                                                  Height="3"
                                                  Margin="8,0,0,0"
                                                  Fill="Black" 
                                                  Stroke="Black" 
                                                  VerticalAlignment="Center" 
                                                  HorizontalAlignment="Center"/>
                                        </StackPanel>

                                    </Control1:MenuItemWrapper.Header>
                                </Control1:MenuItemWrapper>
                            </Menu>

                        </Control1:ExtendedToolBar>

                        <Control1:ExtendedToolBar Band="0" BandIndex="4" Visibility="{Binding Path=DataSetConfigurationsVisibility}" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="DataSet:" VerticalAlignment="Center"/>
                            <ComboBox MinWidth="150" VerticalAlignment="Center" ItemsSource="{Binding Path=DataSetConfigurations}" SelectedValue="{Binding Path=SelectedDataSetConfiguration}" DisplayMemberPath="Name"/>
                        </Control1:ExtendedToolBar>


                        <Control1:ExtendedToolBar Band="1" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Feature Operations:" VerticalAlignment="Center" ToolBar.OverflowMode="Never"/>




                            <Button ToolTip="View Details"  
                                VerticalAlignment="Center"
                                Command="{Binding Path=DataPresenter.ViewCommand}">
                                <Image Source="{StaticResource OpenBitmapImage}" Width="16" Height="16" />
                            </Button>


                            <Separator Margin="5,0,5,0"/>

                            <Button ToolTip="Change History" 
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=DataPresenter.EvolutionCommand}">
                                <Image Source="{StaticResource EvolutionBitmapImage}" Width="16" Height="16" />
                            </Button>

                            <Button ToolTip="Copy"  
                                VerticalAlignment="Center"
                                Command="{Binding Path=DataPresenter.CopyCommand}">
                                <Image Source="{StaticResource CopyBitmapImage}" Width="16" Height="16" />
                            </Button>

                            <Button ToolTip="Relations" 
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=DataPresenter.RelationCommand}">
                                <Image Source="{StaticResource LinkBitmapImage}" Width="16" Height="16" />
                            </Button>

                            <Separator Margin="5,0,5,0"/>

                            <Button ToolTip="Remove Feature From List" 
                                VerticalAlignment="Center"
                                Command="{Binding Path=RemoveCommand}">
                                <Image Source="{StaticResource ShopRemoveBitmapImage}" Width="16" Height="16" />
                            </Button>




                        </Control1:ExtendedToolBar>


                        <Control1:ExtendedToolBar Band="1" Extender1:ToolBarExtender.PreventOverflow="True">
                            <Label Content="Feature Filter:" VerticalAlignment="Center"/>


                            <ComboBox IsEditable="True" 
                                    IsTextSearchEnabled="False"
                                    StaysOpenOnEdit="True"
                                    MinWidth="250" 
                                          x:Name="FiltererComboBox" 
                                          PreviewKeyDown="FiltererComboBoxOnPreviewKeyDown"
                                    VerticalAlignment="Center"
                                    ItemsSource="{Binding Path=DataPresenter.AutoCompleteList}"
                                    Style="{StaticResource ToolBarComboboxStyle}"
                                    Text="{Binding Path=DataPresenter.PropertyFilter, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <Button Command="{Binding DataPresenter.OnClearFilter}" 
                                    Grid.Column="1" Width="25" Height="22"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding Path=DataPresenter.FilterEmptyButtonVisibility}"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
                                    Focusable="False" >
                                <Image Source="{StaticResource DeleteBitmapImage}" Width="16" Height="16"/>
                            </Button>
                            <StackPanel VerticalAlignment="Center">
                                <CheckBox Grid.Column="1"  IsChecked="{Binding ExportDecommissioned}" Visibility="{Binding DecomissionedCheckBoxVisibility}" VerticalAlignment="Center" Margin="5,0,5,0">Export decommissioned</CheckBox>
                            </StackPanel>
                            <StackPanel VerticalAlignment="Center">
                                <CheckBox Grid.Column="1" IsChecked="{Binding ExportObstacles}" Visibility="{Binding ObstacleCheckBoxVisibility}" VerticalAlignment="Center" Margin="5,0,5,0">Only Obstacles</CheckBox>
                            </StackPanel>
                        </Control1:ExtendedToolBar>


                        <!--<Control1:ExtendedToolBar Band="0">
                        <Label Content="View:" VerticalAlignment="Center" ToolBar.OverflowMode="Never"/>



                     

                        <Button ToolTip="Geometry Intersections" 
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=DataPresenter.GeoIntersectionCommand}">
                            <Image Source="{StaticResource GeoIntersectionBitmapImage}" Width="16" Height="16" />
                        </Button>

                    </Control1:ExtendedToolBar>-->

                    </ToolBarTray>
                </DockPanel>

                <Grid  Grid.Row="1" 
                   HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" 
                  Background="WhiteSmoke">
                    <Label Content="No data found" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="SteelBlue"/>
                </Grid>

                <Grid Grid.Row="1">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid   
                      Visibility="{Binding Path=RelationsDataGridVisibility, FallbackValue=Collapsed}"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding Path=RelationsDataFiltered}" 
                      SelectedItem="{Binding Path=SelectedRelation, UpdateSourceTrigger=PropertyChanged}"
                      IsReadOnly="True" 
                      CanUserSortColumns="True"
                     
                      x:Name="RelationDataGrid"
                      MouseDoubleClick="RelationDataGridMouseDoubleClick"
                      ToolTip="Double click on Feature Type to open it in Feature Presenter"  
                      
                      Background="WhiteSmoke"
                      AlternatingRowBackground="WhiteSmoke"
                        
                      VerticalGridLinesBrush="Lavender"
                      HorizontalGridLinesBrush="Lavender"
                      
                      EnableRowVirtualization="False"
                      EnableColumnVirtualization="False"
                        
                      HeadersVisibility="Column"
                      RowStyle="{StaticResource AllwaysSelectedDataGrid}">
                        <DataGrid.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource EditorDataGridGroupStyle}"/>
                        </DataGrid.GroupStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Feature Type" Width="Auto" Binding="{Binding FeatureTypeDescription}"/>
                            <DataGridTextColumn Header="Total Count" Width="Auto" Binding="{Binding Count}"/>
                        </DataGrid.Columns>
                    </DataGrid>


                    <Label Grid.Column="1" Background="Lavender" Width="1" />

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DataGrid Grid.Row="0" 
                      Visibility="{Binding Path=DataPresenter.DataGridVisibility, FallbackValue=Collapsed}"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding Path=DataPresenter.FeatureDataFiltered}" 
                      SelectedItem="{Binding Path=DataPresenter.SelectedFeature, UpdateSourceTrigger=PropertyChanged}"
                      IsReadOnly="True" 
                      Extender1:DataGridExtender.BindableColumns="{Binding Path=DataPresenter.ColumnList}"
                      CanUserSortColumns="True"
                      Background="WhiteSmoke"
                        
                      VerticalGridLinesBrush="Lavender"
                      HorizontalGridLinesBrush="Lavender"
                      
                         VirtualizingStackPanel.VirtualizationMode="Recycling"
                                                  VirtualizingStackPanel.IsVirtualizing="True"
                        
                                                  ScrollViewer.IsDeferredScrollingEnabled="True"
                      
                                                  EnableRowVirtualization="True"
                      EnableColumnVirtualization="False"
                      MouseDoubleClick="DataGridMouseDoubleClick"
                      HeadersVisibility="Column"
                      Name="PresenterDataGrid"
                      AlternatingRowBackground="WhiteSmoke"
                      SelectedCellsChanged="PresenterDataGridSelectedCellsChanged"
                      RowStyle="{StaticResource AllwaysSelectedDataGrid}">

                            <DataGrid.Resources>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Margin" Value="5,0,5,0" />
                                </Style>
                            </DataGrid.Resources>

                            <DataGrid.ContextMenu>
                                <ContextMenu >
                                    <Control1:MenuItemWrapper ItemsSource="{Binding Path=DataPresenter.MenuItemList}" Header="Show Columns"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>

                        <StackPanel Grid.Row="1" Orientation="Horizontal" Background="Lavender">
                            <TextBlock VerticalAlignment="Center" Margin="5,0,5,2" Foreground="SteelBlue" Text="{Binding Path=DataPresenter.Status}"/>
                        </StackPanel>
                    </Grid>



                </Grid>
            </Grid>


            <!--<xmlViewer:XmlViewer DataContext="{Binding Path=XmlViewerViewModel}"   
                                     Grid.Row="0" Grid.Column="0" 
                                     HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch"/>-->

            <View1:BlockerControl 
            DataContext="{Binding Path=DataPresenter.BlockerModel}" 
            Grid.Row="0" Grid.Column="0" 
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Stretch"/>
        </Grid>




    </Grid>


</UserControl>

