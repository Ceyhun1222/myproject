<DataGrid x:Class="PVT.UI.View.UserControls.HoldingViewGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PVT.UI.View.UserControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             SelectionMode="Extended" SelectionUnit="FullRow"
             AutoGenerateColumns="False" IsReadOnly="True" Margin="1,0,-1.4,0"  ScrollViewer.CanContentScroll="True" 
             ScrollViewer.VerticalScrollBarVisibility="Auto">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SelectionChanged">
            <mvvm:EventToCommand
                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=SelectCommand, Mode=OneWay}"
                PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DataGrid.Columns>
        <DataGridTemplateColumn DisplayIndex="0">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <Button  Content="Details">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <mvvm:EventToCommand
                                    Command="{Binding Path=OpenCommand, RelativeSource={RelativeSource FindAncestor,
  AncestorType={x:Type DataGrid}}}"
                                    PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="Begin Date" Binding="{Binding BeginDate, StringFormat='dd/MM/yyyy'}"/>
        <DataGridTextColumn Header="End Date" Binding="{Binding EndDate, TargetNullValue='', StringFormat='dd/MM/yyyy'}"/>
        <DataGridTextColumn Header="ID" Binding="{Binding Identifier}"/>
        <DataGridTextColumn Header="UpperLimit" Binding="{Binding UpperLimitString}" >
            <DataGridTextColumn.ElementStyle>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UpperLimit.Different}" Value="True">
                            <Setter Property="Background" Value="Khaki" />
                            <Setter Property="ToolTip" Value="{Binding UpperLimit.Error}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Header="UpperLimitReference" Binding="{Binding UpperLimitReference.Value}">
            <DataGridTextColumn.ElementStyle>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UpperLimitReference.Different}" Value="True">
                            <Setter Property="Background" Value="Khaki" />
                            <Setter Property="ToolTip" Value="{Binding UpperLimitReference.Error}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Header="LowerLimit" Binding="{Binding LowerLimitString}">
            <DataGridTextColumn.ElementStyle>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LowerLimit.Different}" Value="True">
                            <Setter Property="Background" Value="Khaki" />
                            <Setter Property="ToolTip" Value="{Binding LowerLimit.Error}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Header="LowerLimitReference" Binding="{Binding LowerLimitReference.Value}">
            <DataGridTextColumn.ElementStyle>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LowerLimitReference.Different}" Value="True">
                            <Setter Property="Background" Value="Khaki" />
                            <Setter Property="ToolTip" Value="{Binding LowerLimitReference.Error}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Header="SpeedLimit" Binding="{Binding SpeedLimitString}">
            <DataGridTextColumn.ElementStyle>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SpeedLimit.Different}" Value="True">
                            <Setter Property="Background" Value="Khaki" />
                            <Setter Property="ToolTip" Value="{Binding SpeedLimit.Error}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Header="HoldingPoint" Binding="{Binding HoldingPointName}">
            <DataGridTextColumn.ElementStyle>
            <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                        <DataTrigger Binding="{Binding HoldingPoint.Different}" Value="True">
                        <Setter Property="Background" Value="Khaki" />
                            <Setter Property="ToolTip" Value="{Binding HoldingPoint.Error}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
    </DataGrid.Columns>
</DataGrid>
