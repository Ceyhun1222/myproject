<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACi
        BwAAAk1TRnQBSQFMAgEBBgEAAWABAAFgAQABDAEAAQwBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAEw
        AwABGAMAAQEBAAEgBgABEhoAAyMBMwMXASC4AANQAZ8DWgHKAzMBUgMGAQgcAAMfASwDOgFiFAADOQFg
        A00BlgM8AWhsAANRAaADAAH/AyMB+QNQAZoDCAELGAADMAFLAzAB9gNYAd0DGQEjDAADUQGnAwAB/wNN
        AZZsAANRAaADAAH/AwAB/wMAAf8DWQHZAzwBZgMRARcQAAMvAUkDPQHzAwAB/wNOAe0DRQF+AxEBFwQA
        A1ABowMAAf8DTAGSbAADUQGgAwAB/wMAAf8DAAH/AwAB/wM9AfMDVQGyAyoBQAwAAy8BSQM9AfMDAAH/
        AwAB/wMeAfoDVQG1Ay8BSgNUAa4DAAH/A0wBkmwAA1EBoAMgAf8DHgH/Ax4B/wMfAf8DGgH/AxMB/wMH
        Af4MAAMvAUkDTAHzAy0B/wMmAf8DIAH/AxsB/wNMAe4DVAHrAwAB/wNMAZJsAANRAaADQQH/Az4B/wM/
        Af8DPwH/A0IB9QNWAbgDAAEBDAADLwFJA1EB8wNoAf8DcAH+A1kB8gNVAbUDLwFKA1QBrgMtAf8DTAGS
        bAADUQGgA1MB/wNRAf8DSAH/A1oB3gM+AWwDEwEaEAADLwFJA14B8wOAAf8DWQHSAzsBZAMQARYEAANQ
        AaMDVgH/A0wBkmwAA1EBoANsAf8DVQH7A1EBogMKAQ4YAAMwAUsDSAH2A1MBsAMYASIMAANRAacDgwH/
        A00BlmwAA1ABngNYAcsDNgFZAwcBChwAAx8BLAM6AWEDAAEBEAADOQFfA00BlQM1AVhsAAMiATIDGAEh
        /wCBAAMeASsDRwGCA0cBgwMUARyQAAMQARUDMAFMGAADNAFVAwAB/wMAAf8DJgE5RAADIwEzA04BmANL
        AZAUAAMxAU8DNgFZIAADJAE1A1QBqwNJAe8YAAM0AVUDAAH/AwAB/wMmATlEAAMvAUoDMgH1AxgB+wwA
        Aw0BEgNQAaQDAAH/A04BmBgAAwYBCANAAXEDRAHyAwAB/wNFAfEYAAM0AVUDAAH/AwAB/wMmATlEAAMv
        AUkDPQHzAzIB9QQAAwsBDwMxAU8DVwHlAwwB/AMAAf8DTAGSEAADBwEJAzABTANWAbsDAAH/AwAB/wMA
        Af8DRQHxCAADHgErAx8BLQMfAS0DHwEtA0EBcwMAAf8DAAH/AzgBXAMfAS0DHwEtAx8BLQMRARcEAAME
        AQUDPAFmA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA0wBkgMHAQkIAAMvAUkDPQHzAzsB9AMkATYDTgGY
        AzMB9wMAAf8DAAH/AwAB/wNMAZIMAAMeASsDUAGdA1QB5wMAAf8DAAH/AwAB/wMAAf8DRQHxCwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DSwGOBAADEQEXA1YBwQMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DHwEtCAADLwFJAz0B8wMzAfUDWwHhAy0B/QMgAf8DIwH/AywB/wNP
        Af8DTAGSDAADUgGoAxEB/wMZAf8DHgH/Ax4B/wMeAf8DHwH/A0cB8QgAAwwB/AMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DSgGMBwABAQMoATwDRAF8A0QBfANEAXwDRAF8A0QBfANE
        AXwDNQFYAwABAQgAAy8BSQNMAfMDPgH0AyQBNgNOAZcDWQHsA24B/gNnAf8DZAH/A0wBkhAAA1ABowNV
        AeoDPQH/A0AB/wM+Af8DQAH/A0cB8QgAAzMBUgM0AVUDNAFVAzQBVQNKAY0DAAH/AwAB/wNEAXsDNAFV
        AzQBVQM0AVUDHwEtNAADLwFJA0wB8wM7AfUEAAMLAQ8DKwFCA1cBvQNcAfgDgwH/A0wBkhAAAwgBCwMy
        AVADVgHBA0MB/wNSAf8DUgH/A0kB8RgAAzQBVQMAAf8DAAH/AyYBOUQAAy8BSgNZAfUDIQH7DAADDQER
        A0gBhgNIAf4DTgGYGAADBwEJA0QBewNIAfYDZgH/A0kB8RgAAzQBVQMAAf8DAAH/AyYBOUQAAx4BKwNL
        AY8DSwGPEwABAQMxAU8DNQFYIAADJwE7A1QBrgNMAe4YAAM0AVUDAAH/AwAB/wMmATmQAAMQARYDMAFL
        GAADMwFSAwwB/AMAAf8DIwEzoAABQgFNAT4HAAE+AwABKAMAATADAAEYAwABAQEAAQEFAAHAFwAD/wEA
        Ac8C/wUAAcMB+QHxBQABwQH4AXEFAAHAAXgBEQUAAcABOAEBBQABwAE4AQEFAAHAATgBAQUAAcABeAER
        BQABwQH4AXEFAAHDAfgB8QUAAc8C/wUAA/8FAAHwBP8B8wIAAfAC/wGPAZ8B4wIAAfAC/wGOAR8BgwIA
        AfAC/wGIAR4BAwMAAQgBAQGAARwBAwMAAQgBAQGAARwBAwMAAQgBAQGAAR4BAwMAAQ8B/wGIAR4BAwIA
        AfAC/wGOAR8BgwIAAfAC/wGPAR8B4wIAAfAE/wHzAgAB8AX/AgAL
</value>
  </data>
</root>